[{"code":"if (((x2 - x1) \u003c -250)) {\n\t\t%s\n};","color":"#3f51b5","name":"onViewSwipeLeftCustom","typeName":"","palette":"20","type":"c","spec":"Swipe Left"},{"code":"if (((x1 - x2) \u003c -250)) {\n\t\t%s\n};","color":"#3f51b5","name":"onViewSwipeRightCustom","typeName":"","palette":"20","type":"c","spec":"Swipe Right"},{"code":"if (((y2 - y1) \u003c -250)) {\n\t\t%s\n};","color":"#3f51b5","name":"onViewSwipeUpCustom","typeName":"","palette":"20","type":"c","spec":"Swipe Up"},{"code":"if (((y1 - y2) \u003c -250)) {\n\t\t%s\n};","color":"#3f51b5","name":"onViewSwipeDownCustom","typeName":"","palette":"20","type":"c","spec":"Swipe Down"},{"code":"%s.setOnTouchListener(new View.OnTouchListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean onTouch(View p1, MotionEvent p2){\n\t\t\t\t\tdouble x1 \u003d 0;\n\t\t\t\t\tdouble x2 \u003d 0;\n\t\t\t\t\tdouble y1 \u003d 0;\n\t\t\t\t\tdouble y2 \u003d 0;\n\t\t\t\t\tswitch(p2.getAction()) {\n\t\t\t\t\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\t\t\t\t\ty1 \u003d p2.getY();\n\t\t\t\t\t\t\tx1 \u003d p2.getX();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase MotionEvent.ACTION_UP:\n\t\t\t\t\t\t\ty2 \u003d p2.getY();\n\t\t\t\t\t\t\tx2 \u003d p2.getX();\n\t\t\t\t\t\t\t%s\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}});","color":"#795548","name":"onViewSwipeCustom","typeName":"","palette":"20","type":"c","spec":"When %m.view swiped"},{"code":"%s.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View _view) {\n\t\t\t\t\t%s\n\t\t\t\t}\n\t\t\t});","color":"#3f51b5","name":"onViewClickCustom","typeName":"","palette":"10","type":"c","spec":"When %m.view clicked"},{"code":"%s.setOnLongClickListener(new View.OnLongClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean onLongClick(View _view) {\n\t\t\t\t\t%s\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});","color":"#3f51b5","name":"onViewLongClickCustom","typeName":"","palette":"10","type":"c","spec":"When %m.view long clicked"},{"code":"%s.setVideoUri(%s);","name":"setVideoUri","palette":"10","type":" ","spec":"%m.view setVideoUri %s"},{"code":"%s.setMediaController(%s);","name":"setMediaController","palette":"10","type":" ","spec":"%m.view setMediaController %m.mediacontroller"},{"code":"%s.start();","name":"startVideo","palette":"10","type":" ","spec":"%m.view startVideo"},{"code":"%s.pause();","name":"pauseVideo","palette":"10","type":" ","spec":"%m.view pauseVideo"},{"code":"%s.canPause()","name":"canPauseVideo","palette":"10","type":"b","spec":"%m.view canPauseVideo"},{"code":"%s.canSeekForward()","name":"canSeekForwardVideo","palette":"10","type":"b","spec":"%m.view canSeekForwardVideo"},{"code":"%s.canSeekBackward()","name":"canSeekBackwardVideo","palette":"10","type":"b","spec":"%m.view canSeekBackwardVideo"},{"code":"%s.getDuration()","name":"getDurationVideo","palette":"10","type":"d","spec":"%m.view getDurationVideo"},{"code":"%s.getCurrentPosition()","name":"getCurrentPositionVideo","palette":"10","type":"d","spec":"%m.view getCurrentPositionVideo"},{"code":"%s.isPlaying()","name":"isPlayingVideo","palette":"10","type":"b","spec":"%m.view isPlayingVideo"},{"code":"%s.stopPlayback();","name":"stopPlaybackVideo","palette":"10","type":" ","spec":"%m.view stopPlaybackVideo"},{"code":"%s.getRating()","name":"getRating","palette":"10","type":"d","spec":"%m.view getRating"},{"code":"try {\n\r%s\n} catch(Exception e) {\n\r%s\n}","color":"#e1a92a","name":"tryCatch","typeName":"","palette":"12","type":"e","spec":"try"},{"code":"new StringBuilder(%s).reverse().toString()","name":"reverseStr","palette":"14","type":"s","spec":"reverse %s"},{"code":"for(%s \u003d %s; %s; %s++) {\n\r%s\n}","name":"forLoop1","palette":"13","type":"c","spec":"for %m.varInt \u003d %d ; %b ; %m.varInt ++"},{"code":"for(%s \u003d %s; %s; %s--) {\n\r%s\n}","name":"forLoop2","palette":"13","type":"c","spec":"for %m.varInt \u003d %d ; %b ; %m.varInt --"},{"code":"while(%s) {\n\r%s\n}","name":"whileLoop","palette":"13","type":"c","spec":"while %b"},{"code":"return (%s);","color":"#e1a92a","name":"returnString","typeName":"","palette":"12","type":"f","spec":"return %s"},{"code":"return (%s);","color":"#e1a92a","name":"returnNumber","typeName":"","palette":"12","type":"f","spec":"return %d"},{"code":"return (%s);","color":"#e1a92a","name":"returnBoolean","typeName":"","palette":"12","type":"f","spec":"return %b"},{"code":"switch(%s) {\n\r%s\n}","name":"switchStr","palette":"12","type":"c","spec":"switch %s"},{"code":"case %s: {\n\r%s\n\rbreak;\n}","name":"caseStr","palette":"12","type":"c","spec":"case %s"},{"code":"/**/","color":"#FF1619","name":"ATPH BottomNavigation","typeName":"","palette":"15","type":"h","spec":"This Block is Created by AndroTricks PH"},{"code":"%s","name":"patternGet","typeName":"pattern","palette":"16","type":"p","spec":"Pattern %s.inputOnly"},{"code":"java.util.regex.Pattern %s \u003d java.util.regex.Pattern.compile(%s);","name":"patternInit","palette":"16","type":" ","spec":"Pattern create %s.inputOnly Regex %s"},{"code":"java.util.regex.Pattern %s \u003d java.util.regex.Pattern.compile(%s, %s);","name":"patternInit2","palette":"16","type":" ","spec":"Pattern create %s.inputOnly Regex %s flags %d"},{"code":"java.util.regex.Pattern.quote(%s)","name":"patternQuote","palette":"16","type":"s","spec":"Pattern quote %s"},{"code":"(%s | %s)","name":"multipleFlags","palette":"16","type":"d","spec":"%d | %d"},{"code":"java.util.regex.Pattern.MULTILINE","name":"patternMultiline","palette":"16","type":"d","spec":"Pattern.MULTILINE"},{"code":"java.util.regex.Pattern.DOTALL","name":"patternDotall","palette":"16","type":"d","spec":"Pattern.DOTALL"},{"code":"java.util.regex.Pattern.CASE_INSENSITIVE","name":"patternCaseInsensitive","palette":"16","type":"d","spec":"Pattern.CASE_INSENSITIVE"},{"code":"%s","name":"matcherGet","typeName":"matcher","palette":"16","type":"p","spec":"Matcher %s.inputOnly"},{"code":"java.util.regex.Matcher %s \u003d %s.matcher(%s);","name":"matcherInit","palette":"16","type":" ","spec":"Matcher create %s.inputOnly from %m.pattern string %s"},{"code":"%s.find()","name":"matcherFind","palette":"16","type":"b","spec":"%m.matcher find"},{"code":"%s.matches()","name":"matcherMatches","palette":"16","type":"b","spec":"%m.matcher matches"},{"code":"%s.group()","name":"matcherGroup2","palette":"16","type":"s","spec":"%m.matcher group"},{"code":"%s.group((int)%s)","name":"matcherGroup","palette":"16","type":"s","spec":"%m.matcher group %d"},{"code":"%s.start()","name":"matcherStart","palette":"16","type":"d","spec":"%m.matcher start"},{"code":"%s.end()","name":"matcherEnd","palette":"16","type":"d","spec":"%m.matcher end"},{"code":"%s.matches(%s)","name":"stringMatches","palette":"14","type":"b","spec":"%s matches Regex%s"},{"code":"%s.replaceFirst(%s, %s)","name":"stringRepFirst","palette":"14","type":"s","spec":"%s replace first Regex%s with %s"},{"code":"%s.replaceAll(%s, %s)","name":"stringRepAll","palette":"14","type":"s","spec":"%s replace all Regex%s with %s"},{"code":"/**/","color":"#141414","name":"notReadyYet","typeName":"","palette":"17","type":"h","spec":"NOTE: This category is not done yet."},{"code":"%s","typeName":"json","name":"jsonGet1","palette":"17","type":"p","spec":"JSONObject %s.inputOnly"},{"code":"%s","typeName":"json","name":"jsonGet2","palette":"17","type":"p","spec":"JSONArray %s.inputOnly"},{"code":"JSONArray %s \u003d new JSONArray(%s);","name":"jsonArrayCreate","palette":"17","type":" ","spec":"JSONArray create %s.inputOnly from %s"},{"code":"JSONArray %s \u003d %s;","name":"jsonArrayCreate2","palette":"17","type":" ","spec":"JSONArray create %s.inputOnly from %m.json"},{"code":"JSONObject %s \u003d new JSONObject(%s);","name":"jsonObjectCreate","palette":"17","type":" ","spec":"JSONObject create %s.inputOnly from %s"},{"code":"JSONObject %s \u003d %s;","name":"jsonObjectCreate2","palette":"17","type":" ","spec":"JSONObject create %s.inputOnly from %m.json"},{"code":"%s.setBackground(new android.graphics.drawable.GradientDrawable(android.graphics.drawable.GradientDrawable.Orientation.BR_TL,new int[] {%s,%s}));","color":"#e92467","name":"gradient","typeName":"","palette":"11","type":" ","spec":"%m.view setGradientBackground %m.color to %m.color"},{"code":"%s.get(%s)","color":"#ee7d16","name":"hashmapGetNumber","typeName":"","palette":"18","type":"d","spec":"%m.varMap get key %s"},{"code":"%s.put(%s, (int)(%s));","color":"#ee7d16","name":"hashmapPutNumber","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value int %d"},{"code":"%s.put(%s, (double)(%s));","color":"#ee7d16","name":"hashmapPutNumber2","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value double %d"},{"code":"%s.get(%s)","color":"#ee7d16","name":"hashmapGetBoolean","typeName":"","palette":"18","type":"b","spec":"%m.varMap get key %s"},{"code":"%s.put(%s, %s);","color":"#ee7d16","name":"hashmapPutBoolean","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value %b"},{"code":"%s.get(%s)","color":"#ee7d16","name":"hashmapGetMap","typeName":"","palette":"18","type":"a","spec":"%m.varMap get key %s"},{"code":"Collections.reverse(%s);","color":"#cc5b22","name":"reverseList","typeName":"","palette":"19","type":" ","spec":"reverse %m.list"},{"code":"Collections.shuffle(%s);","color":"#cc5b22","name":"shuffleList","typeName":"","palette":"19","type":" ","spec":"shuffle %m.list"},{"code":"Collections.sort(%s);","color":"#cc5b22","name":"sortList","typeName":"","palette":"19","type":" ","spec":"sort %m.listStr"},{"code":"Collections.sort(%s);","color":"#cc5b22","name":"sortListnum","typeName":"","palette":"19","type":" ","spec":"sort %m.listInt"},{"code":"Collections.swap(%s, (int)(%s), (int)(%s));","color":"#cc5b22","name":"swapInList","typeName":"","palette":"19","type":" ","spec":"swap %m.list position %d with %d"},{"code":"%2$s.get((int)(%1$s))","color":"#cc5b22","name":"getMapAtPosListmap","typeName":"","palette":"19","type":"a","spec":"get map at %d of %m.listMap"},{"code":"%3$s.set((int)(%2$s), %1$s);","color":"#cc5b22","name":"setMapAtPosListmap","typeName":"","palette":"19","type":" ","spec":"set %m.varMap at %d of %m.listMap"},{"code":"%3$s \u003d new ArrayList\u003cString\u003e(Arrays.asList(%1$s.split(%2$s)));","color":"#00836c","name":"stringSplitToList","typeName":"","palette":"14","type":" ","spec":"split %s Regex %s into %m.listStr"},{"code":"%s","color":"#5cb722","name":"addSourceDirectly","typeName":"","palette":"9","type":" ","spec":"add source directly %s.inputOnly"},{"code":"/*\n%s\n*/","color":"#5cb722","name":"asdComment","typeName":"","palette":"9","type":"c","spec":"comment"},{"code":"%s","color":"#5cb722","name":"asdBoolean","typeName":"","palette":"9","type":"b","spec":"boolean %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdNumber","typeName":"","palette":"9","type":"d","spec":"number %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdString","typeName":"","palette":"9","type":"s","spec":"string %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdMap","typeName":"","palette":"9","type":"a","spec":"map %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdListstr","typeName":"List String","palette":"9","type":"l","spec":"list string %s.inputOnly"},{"code":"switch((int)%s) {\n\r%s\n}","name":"switchNum","palette":"12","type":"c","spec":"switch %d"},{"code":"%s","color":"#5cb722","name":"asdListnum","typeName":"List Number","palette":"9","type":"l","spec":"list number %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdListmap","typeName":"List Map","palette":"9","type":"l","spec":"list map %s.inputOnly"},{"code":"case ((int)%s): {\n\r%s\n\rbreak;\n}","color":"#e1a92a","name":"caseNum","typeName":"","palette":"12","type":"c","spec":"case %d"},{"code":"%s.setElevation((int)%s);","color":"#e92467","name":"setElevation","typeName":"","palette":"11","type":" ","spec":"%m.view setElevation %d"},{"code":"%3$s.set((int)%2$s, %1$s);","color":"#cc5b22","name":"setAtPosListstr","typeName":"","palette":"19","type":" ","spec":"set %s at %d of %m.listStr"},{"code":"%3$s.set((int)%2$s, %1$s);","color":"#cc5b22","name":"setAtPosListnum","typeName":"","palette":"19","type":" ","spec":"set %d at %d of %m.listInt"},{"code":"%s.getJSONObject(%s)","typeName":"json","name":"jsonGetJsonObject","palette":"17","type":"p","spec":"%m.json getJSONObject %s"},{"code":"%s.setAdapter(%s);","name":"setAdapterACTV","palette":"10","type":" ","spec":"%m.view setAdapter %m.listStr"},{"code":"%s.setThreshold(%s);","name":"startSearchACTV","palette":"10","type":" ","spec":"%m.view start search from %d"},{"code":"%s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%s, %s));","color":"#e92467","name":"setCornerRadius","typeName":"","palette":"11","type":" ","spec":"%m.view setCornerRadius %d color %m.color"},{"code":"%s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b, int c) { this.setStroke(a, b); this.setColor(c); return this; } }.getIns((int)%s, %s, %s));","color":"#e92467","name":"setStroke","typeName":"","palette":"11","type":" ","spec":"%m.view setStroke %d strokeColor %m.color bgColor %m.color"},{"code":"%s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b, int c, int d) { this.setCornerRadius(a); this.setStroke(b, c); this.setColor(d); return this; } }.getIns((int)%s, (int)%s, %s, %s));","color":"#e92467","name":"setRadiusAndStroke","typeName":"","palette":"11","type":" ","spec":"%m.view set cornerRadius %d stroke %d strokeColor %m.color bgColor %m.color"},{"code":"%s","color":"#5cb722","name":"asdView","typeName":"View","palette":"9","type":"v","spec":"view %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdTextView","typeName":"TextView","palette":"9","type":"v","spec":"textview %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdEditText","typeName":"EditText","palette":"9","type":"v","spec":"edittext %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdButton","typeName":"Button","palette":"9","type":"v","spec":"button %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdImageView","typeName":"ImageView","palette":"9","type":"v","spec":"imageview %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdCheckbox","typeName":"CheckBox","palette":"9","type":"v","spec":"checkbox %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdListView","typeName":"ListView","palette":"9","type":"v","spec":"listview %s.inputOnly"},{"code":"%s","color":"#5cb722","name":"asdSpinner","typeName":"Spinner","palette":"9","type":"v","spec":"spinner %s.inputOnly"},{"code":"%s.setClipToOutline(%s);","color":"#3f51b5","name":"setClipToOutline","typeName":"","palette":"10","type":" ","spec":"%m.imageview setClipToOutline %b"},{"code":"%s.addView(%s);","color":"#3f51b5","name":"addView","typeName":"","palette":"10","type":" ","spec":"%m.view addView %m.view"},{"code":"%s.removeView(%s);","color":"#3f51b5","name":"removeView","typeName":"","palette":"10","type":" ","spec":"%m.view removeView %m.view"},{"code":"%s.getBackground().setColorFilter(%s, PorterDuff.Mode.MULTIPLY);","color":"#e92467","name":"setColorFilterBtn","typeName":"","palette":"11","type":" ","spec":"%m.view setColorFilter %m.color MULTIPLY"},{"code":"default: {\n\r%s\n\rbreak;\n}","name":"defaultSwitch","palette":"12","type":"c","spec":"default"},{"code":"((%s) ? (%s) : (%s))","color":"#e1a92a","name":"ternaryString","typeName":"","palette":"12","type":"s","spec":"%b ? %s : %s"},{"code":"((%s) ? ((int)%s) : ((int)%s))","color":"#e1a92a","name":"ternaryNumber","typeName":"","palette":"12","type":"d","spec":"%b ? %d : %d"},{"code":"%s.put(%s, %s);","color":"#ee7d16","name":"hashmapPutMap","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value %m.varMap"},{"code":"%s.get(%s)","color":"#ee7d16","name":"hashmapListstr","typeName":"List String","palette":"18","type":"l","spec":"%m.varMap get key %s"},{"code":"%s.put(%s, %s);","color":"#ee7d16","name":"hashmapPutListstr","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value %m.listStr"},{"code":"%s.get(%s)","color":"#ee7d16","name":"hashmapGetListmap","typeName":"List Map","palette":"18","type":"l","spec":"%m.varMap get key %s"},{"code":"%s.put(%s, %s);","color":"#ee7d16","name":"hashmapPutListmap","typeName":"","palette":"18","type":" ","spec":"%m.varMap put key %s value %m.listMap"},{"code":"com.google.android.material.snackbar.Snackbar.make(%s, %s, com.google.android.material.snackbar.Snackbar.LENGTH_LONG).setAction(%s, new View.OnClickListener(){\n@Override\r\n\t\t\tpublic void onClick(View _view) {\r\n\t\t\t\t%s\r\n\t\t\t}\n}).show();","color":"#e92467","name":"showSnackbar","typeName":"","palette":"11","type":"c","spec":"%m.view showSnackbar text %s actionText %s onClick"},{"code":"/**/","color":"#3F87FF","name":"Coded by ATPH","typeName":"","palette":"21","type":"h","spec":"This Blocks are Coded by AndroTricks PH"},{"code":"%s.setCancelable(%s);","color":"#3F87FF","name":"diag","typeName":"","palette":"21","type":" ","spec":"Set Dialog %m.dialog setCancelable %b"},{"code":"%s.setTranslationZ((int)%s);","color":"#3F87FF","name":"ATPHTranslationZ","typeName":"","palette":"21","type":" ","spec":"TranslationZ %m.view to %d"},{"code":"%s.setBackground(new android.graphics.drawable.GradientDrawable(){ public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%s, %s));","color":"#3f87ff","name":"CornerRadius","typeName":"","palette":"21","type":" ","spec":"%m.view CornerRadius %d color %m.color"},{"code":"%1$s.setBackground(new android.graphics.drawable.GradientDrawable(){ public android.graphics.drawable.GradientDrawable getIns(int a) { this.setCornerRadius(a); this.setColor(Color.parseColor(\"%3$s\")); return this; } }.getIns((int)%2$s));","color":"#3f87ff","name":"CornerRadius2","typeName":"","palette":"21","type":" ","spec":"%m.view CornerRadius %d color %s.inputOnly"},{"code":"if (android.os.Build.VERSION.SDK_INT \u003e\u003d 21) {\n\n%s.getProgressDrawable();\ngetIns(int a) { this.setColor(a); return this; }.getIns((int)\"%s\"));\n\n}","color":"#3F87FF","name":"ProgressColor","typeName":"","palette":"21","type":" ","spec":"%m.progressbar ProgressColor %s.inputOnly"},{"code":"LayoutInflater inflater \u003d getLayoutInflater(); View toastLayout \u003d inflater.inflate(R.layout.%s, null);\n\nToast toast \u003d new Toast(getApplicationContext()); toast.setDuration(Toast.LENGTH_SHORT);\ntoast.setView(toastLayout);\ntoast.show();\n\n","color":"#3F87FF","name":"ToastImage","typeName":"","palette":"21","type":" ","spec":"ATPH Image Toast %s.inputOnly"},{"code":"LayoutInflater inflater \u003d getLayoutInflater(); View toastLayout \u003d inflater.inflate(R.layout.%s, null);\n\nLinearLayout linear1 \u003d (LinearLayout) toastLayout.findViewById(R.id.linear1);\n\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(\"%s\"));\ngd.setCornerRadius(%s);\nlinear1.setBackground(gd);\n\nToast toast \u003d new Toast(getApplicationContext()); toast.setDuration(Toast.LENGTH_SHORT);\ntoast.setView(toastLayout);\ntoast.show();\n\n","color":"#3F87FF","name":"layout","typeName":"","palette":"21","type":" ","spec":"SetLayout %s.inputOnly setColor %s.inputOnly set radius %d "},{"code":"LayoutInflater inflater \u003d getLayoutInflater(); View toastLayout \u003d inflater.inflate(R.layout.%s, null);\n\nLinearLayout linear1 \u003d (LinearLayout) toastLayout.findViewById(R.id.linear1);\n\nandroid.graphics.drawable.GradientDrawable gd \u003d new android.graphics.drawable.GradientDrawable();\ngd.setColor(Color.parseColor(\"%s\"));\ngd.setCornerRadius(%s);\nlinear1.setBackground(gd);\n\nToast toast \u003d new Toast(getApplicationContext()); toast.setDuration(Toast.LENGTH_SHORT);\ntoast.setGravity(Gravity.TOP|Gravity.CENTER_HORIZONTAL, 0, 0);\ntoast.setView(toastLayout);\ntoast.show();\n\n","color":"#3F87FF","name":"ToastTop","typeName":"","palette":"21","type":" ","spec":"TopToast %s.inputOnly setColor %s.inputOnly set radius %d "},{"code":"%s.setIcon(R.drawable.%s);","color":"#3F87FF","name":"DiagImage","typeName":"","palette":"21","type":" ","spec":"DiagIcon %s.inputOnly set Icon %s.inputOnly"},{"code":"com.google.android.material.bottomnavigation.BottomNavigationView  btm\u003d new com.google.android.material.bottomnavigation.BottomNavigationView (this); btm.setLayoutParams(new ViewGroup.LayoutParams( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n","color":"#FF2612","name":"Create Bottom Nav","typeName":"","palette":"15","type":" ","spec":"Create Bottom Nav"},{"code":"%s.addView(btm);","color":"#FF2612","name":"AddView","typeName":"","palette":"15","type":" ","spec":"%m.view Add View BottomNav"},{"code":"Menu menu \u003d btm.getMenu();\n","color":"#FF2612","name":"Create Menu","typeName":"","palette":"15","type":" ","spec":"Create New Menu"},{"code":"final int %s \u003d %s;","color":"#FF2612","name":"Create Item","typeName":"","palette":"15","type":" ","spec":"Create Item %s Set ID %d"},{"code":"menu.add(Menu.NONE, %s, Menu.NONE, %s).setIcon(R.drawable.%s);","color":"#FF2612","name":"Add item","typeName":"","palette":"15","type":" ","spec":"AddNew Item %s with text %s and icon %m.resource"},{"code":"btm.setOnNavigationItemSelectedListener(new  com.google.android.material.bottomnavigation.BottomNavigationView.OnNavigationItemSelectedListener() {  @Override public boolean onNavigationItemSelected(final MenuItem item) { switch (item.getItemId()){  \\n %s \\n } return true; } });\n","color":"#FF2612","name":"Onclick BottomNav","typeName":"","palette":"15","type":"c","spec":"Bottom Nav OnItem Selected "},{"code":"case %s :  \\n %s \\n break;","color":"#FF2612","name":"OnItem Click","typeName":"","palette":"15","type":"c","spec":"BottomNav item %s.inputOnly Action"},{"code":"/**/","color":"#FF1619","name":"ATPH BottomNavigation","typeName":"","palette":"22","type":"h","spec":"This Block is Created by AndroTricks PH"},{"code":"%1$s.setBackgroundColor(%2$s);\n%1$s.addView(btm);","color":"#FF2612","name":"AddView","typeName":"","palette":"22","type":" ","spec":"%m.view Add View BottomNav Set Color %m.color"},{"code":"Menu menu \u003d btm.getMenu();\n","color":"#FF2612","name":"Create Menu","typeName":"","palette":"22","type":" ","spec":"Create New Menu"},{"code":"final int  %s \u003d %s;","color":"#FF2612","name":"Create Item","typeName":"","palette":"22","type":" ","spec":"Create Item %s.inputOnly Set ID %d"},{"code":"final int  %1$s \u003d %2$s;\n\nmenu.add(Menu.NONE, %1$s, Menu.NONE, %3$s).setIcon(R.drawable.%4$s);","color":"#FF2612","name":"Add item","typeName":"","palette":"22","type":" ","spec":"AddNew Item %s.inputOnly ID %d with text %s and icon %m.resource"},{"code":"btm.setOnNavigationItemSelectedListener(new  com.google.android.material.bottomnavigation.BottomNavigationView.OnNavigationItemSelectedListener() {  @Override public boolean onNavigationItemSelected(final MenuItem item) { switch (item.getItemId()){ \n %s \n } return true; } });\n","color":"#FF2612","name":"Onclick BottomNav","typeName":"","palette":"22","type":"c","spec":"Bottom Nav OnItem Selected "},{"code":"case %s :  \n%s \n break;","color":"#FF2612","name":"OnItem Click","typeName":"","palette":"22","type":"c","spec":"BottomNav item %s.inputOnly Action"},{"code":"//*//","color":"#727272","name":"ATPH AutoInject","typeName":"","palette":"23","type":"h","spec":"ATPH AutoInject"},{"code":"}\nprivate class DownloadTask extends AsyncTask\u003cString, Integer, String\u003e {\n@Override\nprotected void onPreExecute() {\n%1$s\n}\nprotected String doInBackground(String... address) {\ntry {\nfilename\u003d URLUtil.guessFileName(address[0], null, null);\nint resCode \u003d -1;\njava.io.InputStream in \u003d null;\njava.net.URL url \u003d new java.net.URL(address[0]);\njava.net.URLConnection urlConn \u003d url.openConnection();\nif (!(urlConn instanceof java.net.HttpURLConnection)) {\nthrow new java.io.IOException(\"URL is not an Http URL\"); }\njava.net.HttpURLConnection httpConn \u003d (java.net.HttpURLConnection) urlConn; httpConn.setAllowUserInteraction(false); httpConn.setInstanceFollowRedirects(true); httpConn.setRequestMethod(\"GET\"); httpConn.connect();\nresCode \u003d httpConn.getResponseCode();\nif (resCode \u003d\u003d java.net.HttpURLConnection.HTTP_OK) {\nin \u003d httpConn.getInputStream();\nsize \u003d httpConn.getContentLength();\n\n} else { result \u003d \"There was an error\"; }","color":"#727272","name":"Autinject Preexecute","typeName":"","palette":"23","type":"c","spec":"1. Autinject PreExecute "},{"code":"//*//","color":"#FF5B98","name":"Code by ATPH","typeName":"","palette":"24","type":"h","spec":"This Block is coded by ATPH"},{"code":"}\n\nprivate javax.crypto.SecretKey generateKey(String pwd) throws Exception {\n\nfinal java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(\"SHA-256\");\n\nbyte[] b \u003d pwd.getBytes(\"UTF-8\");\n\ndigest.update(b,0,b.length);\n\nbyte[] key \u003d digest.digest();\n\njavax.crypto.spec.SecretKeySpec sec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\");\n\nreturn sec;","color":"#FF5B98","name":"Base64 Lib","typeName":"","palette":"24","type":" ","spec":"Base64Lib"},{"code":"try {\njavax.crypto.spec.SecretKeySpec key \u003d (javax.crypto.spec.SecretKeySpec) generateKey(%s);\n\njavax.crypto.Cipher c \u003d javax.crypto.Cipher.getInstance(\"AES\");\nc.init(javax.crypto.Cipher.DECRYPT_MODE,key); \nbyte[] decode \u003d android.util.Base64.decode(%s,android.util.Base64.DEFAULT); \nbyte[] decval \u003d c.doFinal(decode);\n%s \u003d new String(decval); \n} catch (Exception ex) {\nshowMessage(String.valueOf(ex));\n}","color":"#FF5B98","name":"Decrypt","typeName":"","palette":"24","type":" ","spec":"Decrypt Key %s  Encrypted Text %s DecodeValue %s.inputOnly"},{"code":"try {\njavax.crypto.SecretKey key \u003d generateKey(%s); \njavax.crypto.Cipher c \u003d javax.crypto.Cipher.getInstance(\"AES\"); \nc.init(javax.crypto.Cipher.ENCRYPT_MODE, key); \nbyte[] encVal \u003d c.doFinal(%s.getBytes());\n%s \u003d android.util.Base64.encodeToString(encVal,android.util.Base64.DEFAULT);\n} catch (Exception ex) {\n\n}","color":"#FF5B98","name":"Encrypt","typeName":"","palette":"24","type":" ","spec":"Encrypt Key %s Text %s Encrypt String %s.inputOnly"},{"code":"com.google.android.material.bottomnavigation.BottomNavigationView  btm\u003d new com.google.android.material.bottomnavigation.BottomNavigationView(%1$s.this); btm.setLayoutParams(new ViewGroup.LayoutParams( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\nbtm.setItemIconTintList(null);\nbtm.setLabelVisibilityMode(2);\nbtm.setItemIconSize(100);\n","color":"#FF2612","name":"Create Bottom Nav","typeName":"","palette":"22","type":" ","spec":"Create Bottom Nav %m.activity"},{"code":"NotificationManager nm \u003d (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\nNotification.Builder mBuilder \u003d new Notification.Builder(getApplicationContext(), \"default\");\nmBuilder.setVibrate(new long[]{0L});\nmBuilder.setContentTitle(%1$s);\nmBuilder.setContentText(%2$s);\nmBuilder.setSmallIcon(R.drawable.%4$s);\nNotificationChannel mChannel \u003d new NotificationChannel(\"default\", \"Default Channel\", NotificationManager.IMPORTANCE_DEFAULT);\nnm.createNotificationChannel(mChannel);\nmBuilder.setChannelId(\"default\");\nif (false) {\nNotification notific \u003d new Notification.BigTextStyle(mBuilder).bigText(%2$s).build();\nnm.notify((int) %3$s, notific);\n}\nelse {\nnm.notify((int) %3$s, mBuilder.build());\n}\n}\nelse {\nNotification.Builder mBuilder \u003d new Notification.Builder(getApplicationContext());\nmBuilder.setContentTitle(%1$s);\nmBuilder.setContentText(%2$s);\nmBuilder.setSmallIcon(R.drawable.%4$s);\nif (false) {\nNotification notific \u003d new Notification.BigTextStyle(mBuilder).bigText(%2$s).build();\nnm.notify((int) %3$s, notific);\n}\nelse {\nnm.notify((int) %3$s, mBuilder.build());\n}\n}","color":"#00A66F","name":"Notification Builder","typeName":"","palette":"21","type":" ","spec":"Notification Builder Set Title %s Set Message %s set ID %d set Icon %m.resource"},{"code":"%s.setOnLongClickListener(new View.OnLongClickListener(){\n@Override\npublic boolean onLongClick(View p1){\n%s\nreturn true;\n}\n});\n","color":"#72479B","name":"When long clicked","typeName":"","palette":"21","type":"c","spec":"When %m.view Long Clicked"},{"code":"vidview \u003d new VideoView(this);\nvidview.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT));\n%1$s.addView(vidview);\nmediaControls \u003d new MediaController(this); mediaControls.setAnchorView(vidview); \n\nString vidAddress \u003d %2$s;\n\nUri vidUri \u003d Uri.parse(vidAddress);\n\nvidview.setVideoURI(vidUri);\nvidview.start();\n","color":"#604362","name":"Video from URL","typeName":"","palette":"21","type":" ","spec":"Vid from URL set view %m.view set URL %s"},{"code":"}\nVideoView vidview;\nMediaController mediaControls;\n{","color":"#654E65","name":"VideofromURL block2","typeName":"","palette":"21","type":" ","spec":"VideofromURL block2"},{"code":"Glide\n.with(getApplicationContext())\n.load(%3$s)\n.asBitmap()\n.into(\n  new com.bumptech.glide.request.target.SimpleTarget\u003cBitmap\u003e((int)500,((int)500)) {\n    @Override public void onResourceReady(Bitmap resource, com.bumptech.glide.request.animation.GlideAnimation glideAnimation) {\n %1$s.setImageBitmap(getRoundedCornerBitmap(resource, ((int)%2$s)));\n\n  }\n});\n\n\n}\npublic static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {\nBitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888);\nCanvas canvas \u003d new Canvas(output);\nfinal int color \u003d 0xff424242;\nfinal Paint paint \u003d new Paint();\nfinal Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());\nfinal RectF rectF \u003d new RectF(rect);\nfinal float roundPx \u003d pixels;\npaint.setAntiAlias(true);\ncanvas.drawARGB(0, 0, 0, 0);\npaint.setColor(color);\ncanvas.drawRoundRect(rectF, roundPx, roundPx, paint); \npaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); \ncanvas.drawBitmap(bitmap, rect, rect, paint);\nreturn output;","color":"#392A38","name":"ImagefromURL","typeName":"","palette":"21","type":" ","spec":"ImagefromURL %m.imageview set radius %d Set URL %s "},{"code":"ObjectAnimator anim \u003d new ObjectAnimator();\nanim.setTarget(%1$s);\nanim.setPropertyName(\"translationY\");\nanim.setFloatValues((float)%2$s);\nanim.setDuration((long)200);\nanim.setInterpolator(new android.view.animation.AccelerateDecelerateInterpolator());\nanim.start();","color":"#383838","name":"Animblock","typeName":"","palette":"21","type":" ","spec":"Anim %s.inputOnly possition %d "},{"code":"//ATPH//","color":"#12483C","name":"ATPH Custom Diag","typeName":"","palette":"25","type":"h","spec":"This block is coded by ATPH"},{"code":"final AlertDialog %1$s \u003d new AlertDialog.Builder(%2$s.this).create();\nView inflate \u003d getLayoutInflater().inflate(R.layout.%3$s, null);\n%1$s.setView(inflate);\n%1$s.getWindow().setBackgroundDrawableResource(android.R.color.transparent);","color":"#12483C","name":"Custom Dialog","typeName":"","palette":"25","type":" ","spec":"Custom Diag setDialog %m.dialog setActivity %m.activity setLayout %s.inputOnly  "},{"code":"%1$s.dismiss();","color":"#12483C","name":"Diag Dismiss","typeName":"","palette":"25","type":" ","spec":"Dismiss Dialog %m.dialog"},{"code":"%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b, int c) { this.setCornerRadius(a); this.setColor(b); this.setStroke(c, Color.parseColor(\"#ffffffff\")); return this; } }.getIns((int)%2$s, %3$s,0));\n\n","color":"#12483C","name":"Set DiagCorner","typeName":"","palette":"25","type":" ","spec":"Diag Round Corner setName %s.inputOnly setRadius %d setColor %m.color"},{"code":"final LinearLayout %1$s \u003d (LinearLayout)inflate.findViewById(R.id.%2$s);\n%1$s.setOnClickListener(new OnClickListener() { public void onClick(View view) {\n\n%3$s\n\n} });","color":"#12483C","name":"Onclick","typeName":"","palette":"25","type":"c","spec":"Click Listener for LinearLayout SetName %s.inputOnly  setID %s.inputOnly"},{"code":"final Button %1$s \u003d (Button)inflate.findViewById(R.id.%2$s);\n%1$s.setOnClickListener(new OnClickListener() { public void onClick(View view) {\n\n%3$s\n\n} });","color":"#12483C","name":"Onclick for button","typeName":"","palette":"25","type":"c","spec":"Click Listener for Button SetName %s.inputOnly  setID %s.inputOnly"},{"code":"final ImageView %1$s \u003d (ImageView)findViewById(R.id.%2$s);\n%1$s.setOnClickListener(new OnClickListener() { public void onClick(View view) {\n%3$s\n} });","color":"#12483C","name":"Click for image","typeName":"","palette":"25","type":"c","spec":"Click Listener for Imageview setName %s.inputOnly setID %s.inputOnly"},{"code":"%1$s.setCancelable(false);\n%1$s.show();","color":"#12483C","name":"Diagshow","typeName":"","palette":"25","type":" ","spec":"Dialog Show %m.dialog"},{"code":"%1$s.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);","color":"#12483C","name":"removedim","typeName":"","palette":"25","type":" ","spec":"Remove Dim from setDiag %m.dialog"},{"code":"final %1$s %2$s \u003d (%1$s)inflate.findViewById(R.id.%3$s);","color":"#12483C","name":"ID Identifier","typeName":"","palette":"25","type":" ","spec":"ID Identifier w/ inflate setType %s.inputOnly setName %s.inputOnly setID %s.inputOnly"},{"code":"final %1$s %2$s \u003d (%1$s)findViewById(R.id.%3$s);","color":"#12483C","name":"ID Without inflate","typeName":"","palette":"25","type":" ","spec":"ID Identifier w/o inflate setType %s.inputOnly setName %s.inputOnly setID %s.inputOnly"},{"code":"/**/\n%s","color":"#727272","name":"1.a","typeName":"","palette":"23","type":"c","spec":"1.a Put your path below"},{"code":"java.io.File file \u003d new java.io.File(path);\n\njava.io.OutputStream output \u003d new java.io.FileOutputStream(file);\ntry {\nint bytesRead;\nsumCount \u003d 0;\nbyte[] buffer \u003d new byte[1024];\nwhile ((bytesRead \u003d in.read(buffer)) !\u003d -1) {\noutput.write(buffer, 0, bytesRead);\nsumCount +\u003d bytesRead;\nif (size \u003e 0) {\npublishProgress((int)Math.round(sumCount*100 / size));\n}\n}\n} finally {\noutput.close();\n}\nresult \u003d\"\";\nin.close();\n} catch (java.net.MalformedURLException e) {\nresult \u003d e.getMessage();\n} catch (java.io.IOException e) {\nresult \u003d e.getMessage();\n} catch (Exception e) {\nresult \u003d e.toString();\n}\nreturn result;\n\n}\nprotected void onProgressUpdate(Integer... values) \n{\n%1$s.setProgress(values[values.length - 1]);\n%2$s\n}","color":"#727272","name":"progress","typeName":"","palette":"23","type":"c","spec":"2. ProgressUpdater setProgress %m.progressbar"},{"code":"protected void onPostExecute(String s){\n\nshowMessage(s);\n%1$s\n}","color":"#727272","name":"end","typeName":"","palette":"23","type":"c","spec":"3. Unzip file below"},{"code":"String url \u003d \"%1$\";\nnew DownloadTask().execute(url);","color":"#727272","name":"seturl","typeName":"","palette":"23","type":" ","spec":"Download Button setURL %s"},{"code":"TextView %1$s \u003d (TextView)this.findViewById(R.id.%2$s); %1$s.setEllipsize(TextUtils.TruncateAt.MARQUEE); %1$s.setText(\"%3$s\"); %1$s.setSelected(true); %1$s.setSingleLine(true);","color":"#3F87FF","name":"running text","typeName":"","palette":"21","type":" ","spec":"Running Text setName %s.inputOnly setID %s.inputOnly setText %s.inputOnly "},{"code":"%1$s.setEllipsize(TextUtils.TruncateAt.MARQUEE); %1$s.setText(%2$s); %1$s.setSelected(true); %1$s.setSingleLine(true);","color":"#3F87FF","name":"running textv2","typeName":"","palette":"21","type":" ","spec":"Running Text %m.textview with %s"},{"code":"_drawer.setScrimColor(getResources().getColor(android.R.color.transparent));","color":"#3F87FF","name":"shadow drawer","typeName":"","palette":"21","type":" ","spec":"Remove Drawer Shadow"},{"code":"%s.getBackground().setColorFilter(%s, PorterDuff.Mode.MULTIPLY);","color":"#12483C","name":"color filt","typeName":"","palette":"25","type":" ","spec":"Color Filter %s.inputOnly setColor %m.color "},{"code":"Glide\n.with(getApplicationContext()).asBitmap().load(%4$s).into(\n  new com.bumptech.glide.request.target.SimpleTarget\u003cBitmap\u003e((int)%3$s,((int)%3$s)) \n{\n@Override public void onResourceReady(Bitmap resource,com.bumptech.glide.request.transition.Transition\u003c? super Bitmap\u003etransition) {\n %1$s.setImageBitmap(getRoundedCornerBitmap(resource, ((int)%2$s)));\n  }\n});\n\n\n}\npublic static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {\nBitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888);\nCanvas canvas \u003d new Canvas(output);\nfinal int color \u003d 0xff424242;\nfinal Paint paint \u003d new Paint();\nfinal Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());\nfinal RectF rectF \u003d new RectF(rect);\nfinal float roundPx \u003d pixels;\npaint.setAntiAlias(true);\ncanvas.drawARGB(0, 0, 0, 0);\npaint.setColor(color);\ncanvas.drawRoundRect(rectF, roundPx, roundPx, paint); \npaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); \ncanvas.drawBitmap(bitmap, rect, rect, paint);\nreturn output;","color":"#3F87FF","name":"Image from URL","typeName":"","palette":"21","type":" ","spec":"Glide ImagetoURL %m.imageview  setRadius %d setQuality %d setURL %s"},{"code":"Glide\n.with(getApplicationContext())\n.asBitmap()\n.load(%3$s)\n.into(\n  new com.bumptech.glide.request.target.BitmapImageViewTarget(%1$s)\n {\nprotected void onResourceReady(Bitmap resource) \n{\n%1$s.setImageBitmap(getRoundedCornerBitmap(resource, ((int)%2$s)));\n\nsuper.setResource(resource);\n}  \n});","color":"#3F87FF","name":"Image from URL2","typeName":"","palette":"21","type":" ","spec":"Glide ImagetoURL %m.imageview  setRadius %d  setURL %s"},{"code":"Glide\n.with(getApplicationContext())\n.load(%5$s)\n.into(%1$s);\n\nandroidx.cardview.widget.CardView %3$s \u003d new androidx.cardview.widget.CardView(this);\nLinearLayout.LayoutParams lpp \u003d new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\nint mb \u003d (int)0;\nlpp.setMargins(mb,mb,mb,mb);\n%3$s.setLayoutParams(lpp);\n%3$s.setRadius((float)%4$s);\n%3$s.setCardBackgroundColor(0x00212121);\n%3$s.setPreventCornerOverlap(true);\nif(%2$s.getParent() instanceof LinearLayout){\nViewGroup vg \u003d ((ViewGroup)%2$s.getParent());\nvg.removeView(%2$s);\nvg.addView(%3$s);\n%3$s.addView(%2$s);\n}","color":"#3F87FF","name":"Glide 3","typeName":"","palette":"21","type":" ","spec":"Glide with GIF Support %m.imageview to %m.view  name %s.inputOnly radius %d url %s"},{"code":"Intent startMain \u003d new Intent(Intent.ACTION_MAIN); startMain.addCategory(Intent.CATEGORY_HOME); //startMain.setFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS); \nstartActivity(startMain);\n\n int LAYOUT_FLAG;\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;\n} else {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_PHONE;\n}\n\nfinal WindowManager.LayoutParams params \u003d new WindowManager.LayoutParams(\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    LAYOUT_FLAG,\n      \n    WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL \n     , \n\n    PixelFormat.TRANSPARENT);\n\n  final  WindowManager wm \u003d (WindowManager) getSystemService(WINDOW_SERVICE);\n    LayoutInflater inflater \u003d (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);\n    //View myView \u003d inflater.inflate(R.layout.floating, null);\n\n\nfinal View myView \u003d (View) getLayoutInflater().inflate(R.layout.%1$s, null); \n\n\nLinearLayout %2$s \u003d (LinearLayout) myView.findViewById(R.id.%3$s);","color":"#828412","name":"Floating Window","typeName":"","palette":"21","type":" ","spec":"Create Floating Window setLayout %s.inputOnly setLinearName %s.inputOnly setID %s.inputOnly"},{"code":"Button %1$s \u003d (Button)myView.findViewById(R.id.%2$s);\n\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) { \n%3$s\n}});","color":"#828412","name":"Onclick Float","typeName":"","palette":"21","type":"c","spec":"Set onclick Listener setName %s.inputOnly setID %s.inputOnly"},{"code":"wm.removeView(myView);","color":"#828412","name":"exit","typeName":"","palette":"21","type":" ","spec":"Remove Floating window"},{"code":"LinearLayout %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n\n%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%3$s,%4$s));\n\nwm.addView(myView, params);\n","color":"#828412","name":"Lastblock","typeName":"","palette":"21","type":" ","spec":"Ending Block setName %s.inputOnly setID %s.inputOnly setRadius %d setColor %m.color"},{"code":"LinearLayout %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n\n    %1$s.setOnTouchListener(new OnTouchListener() {\n       @Override\n       public boolean onTouch(View v, MotionEvent event) {\n\n float initialTouchX\u003d0;\n float initialTouchY\u003d0;\n\nswitch (event.getAction()) {\n           case MotionEvent.ACTION_DOWN:\n                 \n               //get the touch location\n               initialTouchX \u003dmyView.getX()- event.getRawX();\n               initialTouchY \u003d myView.getY()-event.getRawY();\n               return true;\n\n           case MotionEvent.ACTION_MOVE:\n               //Calculate the X and Y coordinates of the view.\n               params.x \u003d (int) (event.getRawX() + initialTouchX)- (myView.getWidth() / 2)+ 0;\n               params.y \u003d (int) (event.getRawY() + initialTouchY)- (myView.getHeight() / 2)+ 50;\n \n               //Update the layout with new X \u0026 Y coordinate\n               wm.updateViewLayout(myView, params);\n               return true;\n\n           case MotionEvent.ACTION_UP:\n\nreturn true;\n       }\n           return false;\n       }\n     });\n\n   //Specify the view position\n       params.gravity \u003d Gravity.TOP | Gravity.LEFT;        //Initially view will be added to top-left corner\n       params.x \u003d 0;\n       params.y \u003d 0;\n \n//params.width\u003d800;","color":"#828412","name":"DragLayout","typeName":"","palette":"21","type":" ","spec":"Set DragView setLinearName %s.inputOnly setID %s.inputOnly"},{"code":"%1$s %2$s \u003d (%1$s)myView.findViewById(R.id.%3$s);","color":"#828412","name":"ID Block","typeName":"","palette":"21","type":" ","spec":"SetType %s.inputOnly setName %s.inputOnly setID %s.inputOnly"},{"code":"if (android.os.Build.VERSION.SDK_INT \u003e\u003d 21) {\n\n%1$s.getIndeterminateDrawable().setColorFilter(Color.parseColor(%2$s), PorterDuff.Mode.SRC_IN);\n\n}","color":"#3F87FF","name":"color","typeName":"","palette":"21","type":" ","spec":"ProgressColor %m.progressbar setcolor %s"},{"code":"\t  endStr \u003d \"\";\r\n\t\ti \u003d 0;\r\n\t\ttmr \u003d new TimerTask() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\trunOnUiThread(new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tif (!(i \u003d\u003d %2$s.length())) {\r\n\t\t\t\t\t\t\tString jg \u003d \"\"+%2$s;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tchar ug \u003d jg.charAt((int) i);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tendStr \u003d endStr+\"\"+ug;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t %1$s.setText(endStr);\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t}\r\n\telse {\r\n\t\t\t\t\t\t\ttmr.cancel();\r\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t_timer.scheduleAtFixedRate(tmr, (int)(%3$s), (int)(%3$s));\r\n\t","color":"#683367","name":"typewrte","typeName":"","palette":"26","type":" ","spec":"ATPH TypeWritter Block setTextview %m.textview setText %s setDelay %d"},{"code":"%1$s.setTitle(%2$s);","color":"#12483C","name":"dialog title","typeName":"","palette":"25","type":" ","spec":"Set Title %m.dialog %s"},{"code":"String[] youtubers \u003d {\n%s\n};","color":"#12483C","name":"Chose","typeName":"","palette":"25","type":"c","spec":"Options "},{"code":"%1$s,%2$s,%3$s,%4$s","color":"#12483C","name":"names","typeName":"","palette":"25","type":" ","spec":"Names %s  %s  %s   %s"},{"code":",%1$s,%2$s,%3$s,%4$s","color":"#12483C","name":"namesB","typeName":"","palette":"25","type":" ","spec":"Names B %s  %s  %s   %s"},{"code":"int checkedItem \u003d 0;\n%1$s.setSingleChoiceItems(youtubers, checkedItem, new DialogInterface.OnClickListener() {\n@Override\npublic void onClick(DialogInterface dialog, int which) {\n%2$s\n}\n});","color":"#12483C","name":"endblock.o","typeName":"","palette":"25","type":"c","spec":"End block %m.dialog"},{"code":"//Code by Tejj Liit\n//Block by ATPH\n\noverridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);","color":"#8D1D11","name":"Tejj Block","typeName":"","palette":"21","type":" ","spec":"Activity Transition by Tejj Liit"},{"code":"","color":"#3F87FF","name":"sample","typeName":"","palette":"21","type":" ","spec":"Sample FBDB %m.firebase"},{"code":"}public static final class AESCrypt { private static final String TAG \u003d \"AESCrypt\"; private static final String AES_MODE \u003d \"AES/CBC/PKCS7Padding\"; private static final String CHARSET \u003d \"UTF-8\"; private static final String HASH_ALGORITHM \u003d \"SHA-256\"; private static final byte[] ivBytes \u003d {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; public static boolean DEBUG_LOG_ENABLED \u003d false; private static javax.crypto.spec.SecretKeySpec generateKey(final String password) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException { final java.security.MessageDigest digest \u003d java.security.MessageDigest.getInstance(HASH_ALGORITHM); byte[] bytes \u003d password.getBytes(\"UTF-8\"); digest.update(bytes, 0, bytes.length); byte[] key \u003d digest.digest(); log(\"SHA-256 key \", key); javax.crypto.spec.SecretKeySpec secretKeySpec \u003d new javax.crypto.spec.SecretKeySpec(key, \"AES\"); return secretKeySpec; } public static String encrypt(final String password, String message) throws java.security.GeneralSecurityException { try { final javax.crypto.spec.SecretKeySpec key \u003d generateKey(password); log(\"message\", message); byte[] cipherText \u003d encrypt(key, ivBytes, message.getBytes(CHARSET)); String encoded \u003d android.util.Base64.encodeToString(cipherText, android.util.Base64.NO_WRAP); log(\"Base64.NO_WRAP\", encoded); return encoded; } catch (java.io.UnsupportedEncodingException e) { if (DEBUG_LOG_ENABLED) android.util.Log.e(TAG, \"UnsupportedEncodingException \", e); throw new java.security.GeneralSecurityException(e); } } public static byte[] encrypt(final javax.crypto.spec.SecretKeySpec key, final byte[] iv, final byte[] message) throws java.security.GeneralSecurityException { final javax.crypto.Cipher cipher \u003d javax.crypto.Cipher.getInstance(AES_MODE); javax.crypto.spec.IvParameterSpec ivSpec \u003d new javax.crypto.spec.IvParameterSpec(iv); cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, key, ivSpec); byte[] cipherText \u003d cipher.doFinal(message); log(\"cipherText\", cipherText); return cipherText; } public static String decrypt(final String password, String base64EncodedCipherText) throws java.security.GeneralSecurityException { try { final javax.crypto.spec.SecretKeySpec key \u003d generateKey(password); log(\"base64EncodedCipherText\", base64EncodedCipherText); byte[] decodedCipherText \u003d android.util.Base64.decode(base64EncodedCipherText, android.util.Base64.NO_WRAP); log(\"decodedCipherText\", decodedCipherText); byte[] decryptedBytes \u003d decrypt(key, ivBytes, decodedCipherText); log(\"decryptedBytes\", decryptedBytes); String message \u003d new String(decryptedBytes, CHARSET); log(\"message\", message); return message; } catch (java.io.UnsupportedEncodingException e) { if (DEBUG_LOG_ENABLED) android.util.Log.e(TAG, \"UnsupportedEncodingException \", e); throw new java.security.GeneralSecurityException(e); } } public static byte[] decrypt(final javax.crypto.spec.SecretKeySpec key, final byte[] iv, final byte[] decodedCipherText) throws java.security.GeneralSecurityException { final javax.crypto.Cipher cipher \u003d javax.crypto.Cipher.getInstance(AES_MODE); javax.crypto.spec.IvParameterSpec ivSpec \u003d new javax.crypto.spec.IvParameterSpec(iv); cipher.init(javax.crypto.Cipher.DECRYPT_MODE, key, ivSpec); byte[] decryptedBytes \u003d cipher.doFinal(decodedCipherText); log(\"decryptedBytes\", decryptedBytes); return decryptedBytes; } private static void log(String what, byte[] bytes) { if (DEBUG_LOG_ENABLED) android.util.Log.d(TAG, what + \"[\" + bytes.length + \"] [\" + bytesToHex(bytes) + \"]\"); } private static void log(String what, String value) { if (DEBUG_LOG_ENABLED) android.util.Log.d(TAG, what + \"[\" + value.length() + \"] [\" + value + \"]\"); } private static String bytesToHex(byte[] bytes) { final char[] hexArray \u003d {\u00270\u0027, \u00271\u0027, \u00272\u0027, \u00273\u0027, \u00274\u0027, \u00275\u0027, \u00276\u0027, \u00277\u0027, \u00278\u0027, \u00279\u0027, \u0027A\u0027, \u0027B\u0027, \u0027C\u0027, \u0027D\u0027, \u0027E\u0027, \u0027F\u0027}; char[] hexChars \u003d new char[bytes.length * 2]; int v; for (int j \u003d 0; j \u003c bytes.length; j++) { v \u003d bytes[j] \u0026 0xFF; hexChars[j * 2] \u003d hexArray[v \u003e\u003e\u003e 4]; hexChars[j * 2 + 1] \u003d hexArray[v \u0026 0x0F]; } return new String(hexChars); } private AESCrypt() { }}{\r","color":"#E02C2F","name":"Lib","typeName":"","palette":"27","type":" ","spec":"AES Lib by ATPH"},{"code":"AESCrypt.decrypt(%s,%s)","color":"#E02C2F","name":"AES Decrypt","typeName":"","palette":"27","type":"s","spec":"AES Decrypt withkey  %s  and text %s"},{"code":"AESCrypt.encrypt(%s,%s)","color":"#E02C2F","name":"AES Encrypt","typeName":"","palette":"27","type":"s","spec":"AES Encrypt withkey %s and text %s"},{"code":"new StringBuilder(%s).reverse().toString()","color":"#7E1B81","name":"Reverse Text","typeName":"","palette":"21","type":"s","spec":"ATPH Reverse text %s"},{"code":"String MyAndroidID \u003d android.provider.Settings.Secure.getString(this.getContentResolver(), android.provider.Settings.Secure.ANDROID_ID);\n\n\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n\n%s.setText(MyDeviceID);\n\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#3F87FF","name":"Device ID","typeName":"","palette":"21","type":" ","spec":"Device ID to %m.textview"},{"code":"GridView %1$s \u003d new GridView(%2$s.this);\n%1$s.setLayoutParams(new GridView.LayoutParams(GridLayout.LayoutParams.MATCH_PARENT, GridLayout.LayoutParams.WRAP_CONTENT));","color":"#C1BA00","name":"Create New Gridview","typeName":"","palette":"28","type":" ","spec":"Create New Gridview %m.varStr %m.activity"},{"code":"%1$s.setNumColumns(%2$s);","color":"#C1BA00","name":"column","typeName":"","palette":"28","type":" ","spec":"%m.varStr Set Column Number %d"},{"code":"%1$s.invalidateViews(); \n%1$s.setAdapter(new Listview%2$sAdapter(%3$s));","color":"#C1BA00","name":"list","typeName":"","palette":"28","type":" ","spec":"%m.varStr Set Listview Number %d to  %m.listMap"},{"code":"%1$s.addView (%2$s);","color":"#C1BA00","name":"addview","typeName":"","palette":"28","type":" ","spec":"%m.view Add View %m.varStr"},{"code":"%1$s.setOnItemClickListener(new AdapterView.OnItemClickListener()\n {\n@Override public void onItemClick(AdapterView parent, View view, int position, long id) {\n%2$s\t\t\t\t \n\t\t\t}\n});","color":"#C1BA00","name":"click","typeName":"","palette":"28","type":"c","spec":"%m.varStr set onclickListener "},{"code":"%1$s.setVerticalSpacing(%2$s); %1$s.setHorizontalSpacing(%3$s);\n%1$s.setStretchMode(GridView.STRETCH_COLUMN_WIDTH);","color":"#C1BA00","name":"Space","typeName":"","palette":"28","type":" ","spec":"%m.varStr set VSpace %d set HSpace %d"},{"code":"((BaseAdapter)%s.getAdapter()).notifyDataSetChanged();\n","color":"#C1BA00","name":"update","typeName":"","palette":"28","type":" ","spec":"Update Grid %m.varStr"},{"code":"%s.setVerticalScrollBarEnabled(false);","color":"#C1BA00","name":"remove scroll","typeName":"","palette":"28","type":" ","spec":"Remove ScrollBar %m.varStr"},{"code":"StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder().build());\nIntent intent \u003d new Intent(Intent.ACTION_INSTALL_PACKAGE);\nintent.setData(Uri.fromFile(new java.io.File(%s)));\nstartActivity(intent);","color":"#3F87FF","name":"install","typeName":"","palette":"21","type":" ","spec":"AutoInstall %s"},{"code":"getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);","color":"#3F87FF","name":"adjuest","typeName":"","palette":"21","type":" ","spec":"Fit Layout with Keyboard"},{"code":"Notification.Builder mBuilder \u003d new Notification.Builder(%s.this);\nmBuilder.setSmallIcon(R.drawable.%s);\nmBuilder.setContentTitle(%s);\nmBuilder.setContentText(%s);\nNotificationManager notificationManager \u003d (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\nint onx \u003d 1;\nnotificationManager.notify(onx, mBuilder.build());","color":"#3F87FF","name":"notif","typeName":"","palette":"21","type":" ","spec":"Notification %m.activity icon %m.resource set Title %s set Message %s"},{"code":"String tmp\u003d\"\";\nfor(int i\u003d0;\ni\u003c%2$s.length();\ni++)\n{\n  String chr\u003d %2$s.charAt(i) + \"\";\n  if(Math.round(Math.random())\u003d\u003d1)\n{\n   tmp\u003dtmp+chr.toUpperCase();\n\n  }\nelse tmp\u003dtmp+chr;\n}\n%1$s.setText(tmp);","color":"#683367","name":"Randomizer","typeName":"","palette":"26","type":" ","spec":"%m.textview set Shuffler from %s"},{"code":"%1$s.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onCheckedChanged(CompoundButton _param1, boolean _param2)  {\r\n\t\t\t\tfinal boolean _isChecked \u003d _param2;\r\n\t\t\t\tif (_isChecked) {\r\n%2$s\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t%3$s\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});","color":"#3F87FF","name":"switch","typeName":"","palette":"21","type":"e","spec":"%s.inputOnly isCheck then"},{"code":"if(%1$s.isEmpty()){\nToast.makeText(getApplicationContext(),\"Text Cant Be Empty\",Toast.LENGTH_LONG).show();\n}else{\ncom.google.zxing.MultiFormatWriter multiFormatWriter \u003d new com.google.zxing.MultiFormatWriter();\ntry {\ncom.google.zxing.common.BitMatrix bitMatrix \u003d multiFormatWriter.encode(%1$s, com.google.zxing.BarcodeFormat.QR_CODE,500,500);\ncom.journeyapps.barcodescanner.BarcodeEncoder barcodeEncoder \u003d new com.journeyapps.barcodescanner.BarcodeEncoder();\nBitmap bitmap \u003d barcodeEncoder.createBitmap(bitMatrix);\n%2$s.setImageBitmap(bitmap);\n} catch (com.google.zxing.WriterException e) {\ne.printStackTrace();\n} }","color":"#71B3BA","name":"LIB","typeName":"","palette":"29","type":" ","spec":"Set Text %s  to %m.imageview"},{"code":"if(%2$s.isEmpty()){\nToast.makeText(getApplicationContext(),\"Path Can\u0027t Be Empty\",Toast.LENGTH_LONG).show();\n}\nelse\n%3$s\n{\nBitmap image \u003d ((android.graphics.drawable.BitmapDrawable)%1$s.getDrawable()).getBitmap();\njava.io.File output \u003d new java.io.File(%2$s);\ntry {\njava.io.FileOutputStream fos \u003d new java.io.FileOutputStream(output); image.compress(Bitmap.CompressFormat.PNG, 100, fos);\nfos.flush();\nfos.close();\n} catch (Exception e){\nshowMessage(e.toString());\n} }","color":"#71B3BA","name":"save to","typeName":"","palette":"29","type":"c","spec":"Save QR from %m.imageview to %s "},{"code":"Calligrapher calligrapher \u003d new Calligrapher(this); calligrapher.setFont(this, \"%1$s\", true);\n\n","color":"#3F87FF","name":"beta","typeName":"","palette":"21","type":" ","spec":"SetFont From %s.inputOnly"},{"code":"//This block is Coded by CyberAlpha PH\n\noverrideFonts(this,getWindow().getDecorView());\n}\nprivate void overrideFonts(final android.content.Context context, final View v) {\n\nString type \u003d \"%2$s\";\nint op \u003d 0;\n\n\tif (type.equals(\"normal\")) {\r\n\t\t\top \u003d 0;\r\n\t\t}\r\n\t\tif (type.equals(\"bold\")) {\r\n\t\t\top \u003d 1;\r\n\t\t}\nif (type.equals(\"italic\")) {\r\n\t\t\top \u003d 2;\r\n\t\t}\r\n\t\tif (type.equals(\"bold|italic\")) {\r\n\t\t\top \u003d 3;\r\n\t\t}\n\n\t\ttry {\n\t\t\tTypeface typeace \u003d Typeface.createFromAsset(getAssets(),\"fonts/%1$s.ttf\");\r\n\t\t\tif (v instanceof ViewGroup) \n{\r\n\t\t\t\tViewGroup vg \u003d (ViewGroup) v;\n\t\t\t\tfor (int i \u003d 0;\n\t\t\t\ti \u003c vg.getChildCount();\n\t\t\t\ti++) {\n\t\t\t\t\tView child \u003d vg.getChildAt(i);\n\t\t\t\t\toverrideFonts(context, child);\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((v instanceof TextView)) {\r\n\t\t\t\t\t((TextView) v).setTypeface(typeace, (op));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif ((v instanceof EditText )) {\r\n\t\t\t\t\t\t((EditText) v).setTypeface(typeace, (op));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ((v instanceof Button)) {\r\n\t\t\t\t\t\t\t((Button) v).setTypeface(typeace, (op));\n\t\t\t\t\t\t}\n      \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\n\t\t\n\t\t{\r\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error Loading Font\");\r\n\t\t};","color":"#3F87FF","name":"All font by ATPH","typeName":"","palette":"21","type":" ","spec":"SetFont from %m.font to All Activity with style %m.typeface"},{"code":"Calligrapher calligrapher \u003d new Calligrapher(this); calligrapher.setFont(this, \"%1$s.ttf\", true);","color":"#71B3BA","name":"NewBlock","typeName":"","palette":"29","type":" ","spec":"Block from %s.inputOnly"},{"code":"Bitmap bm \u003d ((android.graphics.drawable.BitmapDrawable) %1$s.getDrawable()).getBitmap(); %1$s.setImageBitmap(getRoundedCornerBitmap(bm, %2$s));\n\n} public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) { Bitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888); Canvas canvas \u003d new Canvas(output); final int color \u003d 0xff424242; final Paint paint \u003d new Paint(); final Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()); final RectF rectF \u003d new RectF(rect); final float roundPx \u003d pixels; paint.setAntiAlias(true); canvas.drawARGB(0, 0, 0, 0); paint.setColor(color); canvas.drawRoundRect(rectF, roundPx, roundPx, paint); paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); canvas.drawBitmap(bitmap, rect, rect, paint); return output;","color":"#3F87FF","name":"beta","typeName":"","palette":"21","type":" ","spec":"%m.imageview set Radius %d"},{"code":"//This block is Coded by CyberAlpha PH\n\noverrideFonts(this,getWindow().getDecorView());\n}\nprivate void overrideFonts(final android.content.Context context, final View v) {\n\nString type \u003d \"%2$s\";\nint op \u003d 0;\n\n\tif (type.equals(\"normal\")) {\r\n\t\t\top \u003d 0;\r\n\t\t}\r\n\t\tif (type.equals(\"bold\")) {\r\n\t\t\top \u003d 1;\r\n\t\t}\nif (type.equals(\"italic\")) {\r\n\t\t\top \u003d 2;\r\n\t\t}\r\n\t\tif (type.equals(\"bold|italic\")) {\r\n\t\t\top \u003d 3;\r\n\t\t}\n\n\t\ttry {\n\t\t\tTypeface typeace \u003d Typeface.createFromAsset(getAssets(),\"fonts/%1$s.ttf\");\r\n\t\t\tif (v instanceof ViewGroup) \n{\r\n\t\t\t\tViewGroup vg \u003d (ViewGroup) v;\n\t\t\t\tfor (int i \u003d 0;\n\t\t\t\ti \u003c vg.getChildCount();\n\t\t\t\ti++) {\n\t\t\t\t\tView child \u003d vg.getChildAt(i);\n\t\t\t\t\toverrideFonts(context, child);\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((v instanceof TextView)) {\r\n\t\t\t\t\t((TextView) v).setTypeface(typeace, (op));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif ((v instanceof EditText )) {\r\n\t\t\t\t\t\t((EditText) v).setTypeface(typeace, (op));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ((v instanceof Button)) {\r\n\t\t\t\t\t\t\t((Button) v).setTypeface(typeace, (op));\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\n\t\t\n\t\t{\r\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error Loading Font\");\r\n\t\t};","color":"#000000","name":"All font by ATPH","typeName":"","palette":"30","type":" ","spec":"SetFont from %m.font to All Activity with style %m.typeface"},{"code":"//This block is Coded by CyberAlpha PH\n\nButtonFonts(this,getWindow().getDecorView());\n}\nprivate void ButtonFonts(final android.content.Context context, final View v) {\n\nString type \u003d \"%2$s\";\nint op \u003d 0;\n\n\tif (type.equals(\"normal\")) {\r\n\t\t\top \u003d 0;\r\n\t\t}\r\n\t\tif (type.equals(\"bold\")) {\r\n\t\t\top \u003d 1;\r\n\t\t}\nif (type.equals(\"italic\")) {\r\n\t\t\top \u003d 2;\r\n\t\t}\r\n\t\tif (type.equals(\"bold|italic\")) {\r\n\t\t\top \u003d 3;\r\n\t\t}\n\n\t\ttry {\n\t\t\tTypeface typeace \u003d Typeface.createFromAsset(getAssets(),\"fonts/%1$s.ttf\");\r\n\t\t\tif (v instanceof ViewGroup) \n{\r\n\t\t\t\tViewGroup vg \u003d (ViewGroup) v;\n\t\t\t\tfor (int i \u003d 0;\n\t\t\t\ti \u003c vg.getChildCount();\n\t\t\t\ti++) {\n\t\t\t\t\tView child \u003d vg.getChildAt(i);\n\t\t\t\t\tButtonFonts(context, child);\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\r\n\t\t\t\t\t\tif ((v instanceof Button)) {\r\n\t\t\t\t\t\t\t((Button) v).setTypeface(typeace, (op));\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\n\t\t\n\t\t{\r\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error Loading Font\");\r\n\t\t};","color":"#000000","name":"ButtonFont by ATPH","typeName":"","palette":"30","type":" ","spec":"Set Button Font from %m.font with style %m.typeface"},{"code":"//This block is Coded by CyberAlpha PH\n\nTextviewFonts(this,getWindow().getDecorView());\n}\nprivate void TextviewFonts(final android.content.Context context, final View v) {\n\nString type \u003d \"%2$s\";\nint op \u003d 0;\n\n\tif (type.equals(\"normal\")) {\r\n\t\t\top \u003d 0;\r\n\t\t}\r\n\t\tif (type.equals(\"bold\")) {\r\n\t\t\top \u003d 1;\r\n\t\t}\nif (type.equals(\"italic\")) {\r\n\t\t\top \u003d 2;\r\n\t\t}\r\n\t\tif (type.equals(\"bold|italic\")) {\r\n\t\t\top \u003d 3;\r\n\t\t}\n\n\t\ttry {\n\t\t\tTypeface typeace \u003d Typeface.createFromAsset(getAssets(),\"fonts/%1$s.ttf\");\r\n\t\t\tif (v instanceof ViewGroup) \n{\r\n\t\t\t\tViewGroup vg \u003d (ViewGroup) v;\n\t\t\t\tfor (int i \u003d 0;\n\t\t\t\ti \u003c vg.getChildCount();\n\t\t\t\ti++) {\n\t\t\t\t\tView child \u003d vg.getChildAt(i);\n\t\t\t\t\tTextviewFonts(context, child);\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\r\n\t\t\t\t\t\tif ((v instanceof TextView)) {\r\n\t\t\t\t\t\t\t((TextView) v).setTypeface(typeace, (op));\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\n\t\t\n\t\t{\r\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error Loading Font\");\r\n\t\t};","color":"#000000","name":"TextviewFont by ATPH","typeName":"","palette":"30","type":" ","spec":"Set Textview Font from %m.font with style %m.typeface"},{"code":"//This block is Coded by CyberAlpha PH\n\nEdittextFonts(this,getWindow().getDecorView());\n}\nprivate void EdittextFonts(final android.content.Context context, final View v) {\n\nString type \u003d \"%2$s\";\nint op \u003d 0;\n\n\tif (type.equals(\"normal\")) {\r\n\t\t\top \u003d 0;\r\n\t\t}\r\n\t\tif (type.equals(\"bold\")) {\r\n\t\t\top \u003d 1;\r\n\t\t}\nif (type.equals(\"italic\")) {\r\n\t\t\top \u003d 2;\r\n\t\t}\r\n\t\tif (type.equals(\"bold|italic\")) {\r\n\t\t\top \u003d 3;\r\n\t\t}\n\n\t\ttry {\n\t\t\tTypeface typeace \u003d Typeface.createFromAsset(getAssets(),\"fonts/%1$s.ttf\");\r\n\t\t\tif (v instanceof ViewGroup) \n{\r\n\t\t\t\tViewGroup vg \u003d (ViewGroup) v;\n\t\t\t\tfor (int i \u003d 0;\n\t\t\t\ti \u003c vg.getChildCount();\n\t\t\t\ti++) {\n\t\t\t\t\tView child \u003d vg.getChildAt(i);\n\t\t\t\t\tEdittextFonts(context, child);\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\r\n\t\t\t\t\t\tif ((v instanceof EditText)) {\r\n\t\t\t\t\t\t\t((EditText) v).setTypeface(typeace, (op));\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception e)\n\t\t\n\t\t{\r\n\t\t\tSketchwareUtil.showMessage(getApplicationContext(), \"Error Loading Font\");\r\n\t\t};","color":"#000000","name":"EditText Font by ATPH","typeName":"","palette":"30","type":" ","spec":"Set EditText Font from %m.font with style %m.typeface"},{"code":"%1$s.substring(%1$s.lastIndexOf(\".\"))","color":"#3F87FF","name":"substring","typeName":"","palette":"21","type":"s","spec":"Extension of File %s.inputOnly"},{"code":"while (%1$s) {\n%2$s\n}","color":"#BE50A5","name":"While Loop","typeName":"","palette":"0","type":"c","spec":"While %s.inputOnly then"},{"code":"while (%1$s) {\n%2$s\n}","color":"#BE50A5","name":"While Loop2","typeName":"","palette":"0","type":"c","spec":"While %b then"},{"code":"%1$s \u003c %2$s","color":"#BE50A5","name":"great","typeName":"","palette":"0","type":"b","spec":"%s.inputOnly \u003c %s.inputOnly"},{"code":"%1$s \u003d\u003d %2$s","color":"#BE50A5","name":"start eq","typeName":"","palette":"0","type":"b","spec":"%s.inputOnly \u003d %s.inputOnly"},{"code":"int %1$s \u003d %2$s;","color":"#BE50A5","name":"naman","typeName":"","palette":"0","type":" ","spec":"int %s.inputOnly to %d"},{"code":"prog \u003d new ProgressDialog(%3$s.this);\nprog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n\t\t\t\tprog.setMax(100);\n\t\t\t\tprog.setIndeterminate(false);\n\t\t\t\tprog.setCancelable(false);\n\t\t\t\tprog.setCanceledOnTouchOutside(false);\n\t\t      %4$s\nprog.setTitle(%1$s);\nprog.setMessage(%2$s);\nprog.show();\n","color":"#3F87FF","name":"ProgDialog","typeName":"","palette":"21","type":"c","spec":"Set ProgressDialog Title %s Message %s %m.activity "},{"code":"prog.setButton(%1$s, new DialogInterface.OnClickListener() \n{ \npublic void onClick(DialogInterface dialog, int which) { \nprog.dismiss();\n} \n});","color":"#3F87FF","name":"ProgButt","typeName":"","palette":"21","type":" ","spec":"Set Cancel Button %s"},{"code":"}\nprivate class DownloadTask extends AsyncTask\u003cString, Integer, String\u003e {\nProgressDialog prog;\n@Override\nprotected void onPreExecute() {\nsuper.onPreExecute();\nprog \u003d new ProgressDialog(%3$s.this);\nprog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n\t\t\t\tprog.setMax(100);\n\t\t\t\tprog.setIndeterminate(false);\n\t\t\t\tprog.setCancelable(false);\n\t\t\t\tprog.setCanceledOnTouchOutside(false);\nprog.setTitle(%1$s);\nprog.setMessage(%2$s);\nprog.show();\n}\n\nString filename \u003d \"\";\nString result \u003d \"\";\ndouble size \u003d 0;\ndouble sumCount \u003d 0;\n\n@Override\nprotected String doInBackground(String... address) {\ntry {\nfilename\u003d URLUtil.guessFileName(address[0], null, null);\nint resCode \u003d -1;\njava.io.InputStream in \u003d null;\njava.net.URL url \u003d new java.net.URL(address[0]);\njava.net.URLConnection urlConn \u003d url.openConnection();\nif (!(urlConn instanceof java.net.HttpURLConnection)) {\nthrow new java.io.IOException(\"URL is not an Http URL\"); }\njava.net.HttpURLConnection httpConn \u003d (java.net.HttpURLConnection) urlConn; httpConn.setAllowUserInteraction(false); httpConn.setInstanceFollowRedirects(true); httpConn.setRequestMethod(\"GET\"); httpConn.connect();\nresCode \u003d httpConn.getResponseCode();\nif (resCode \u003d\u003d java.net.HttpURLConnection.HTTP_OK) {\nin \u003d httpConn.getInputStream();\nsize \u003d httpConn.getContentLength();\n\n} else { result \u003d \"There was an error\"; }\n\n%4$s\n\njava.io.File file \u003d new java.io.File(path);\n\njava.io.OutputStream output \u003d new java.io.FileOutputStream(file);\ntry {\nint bytesRead;\nsumCount \u003d 0;\nbyte[] buffer \u003d new byte[1024];\nwhile ((bytesRead \u003d in.read(buffer)) !\u003d -1) {\noutput.write(buffer, 0, bytesRead);\nsumCount +\u003d bytesRead;\nif (size \u003e 0) {\npublishProgress((int)Math.round(sumCount*100 / size));\n}\n}\n} finally {\noutput.close();\n}\nin.close();\n} catch (java.net.MalformedURLException e) {\nresult \u003d e.getMessage();\n} catch (java.io.IOException e) {\nresult \u003d e.getMessage();\n} catch (Exception e) {\nresult \u003d e.toString();\n}\nreturn result;\n}\n@Override\nprotected void onProgressUpdate(Integer... values) {\nsuper.onProgressUpdate(values);\nprog.setProgress(values[values.length - 1]);\ndouble num \u003d prog.getProgress();\n\n}","color":"#295E70","name":"CyberAlpha","typeName":"","palette":"31","type":"c","spec":"PreExec Title %s Message %s Activity %m.activity"},{"code":"@Override\nprotected void onPostExecute(String s){\n\nshowMessage(s);\n%1$s\nprog.dismiss();\n}","color":"#295E70","name":"taetae","typeName":"","palette":"31","type":"c","spec":"PostExec"},{"code":"((LinearLayout)%1$s).removeView(%3$s); \nfinal com.google.android.material.textfield.TextInputLayout %2$s \u003d new com.google.android.material.textfield.TextInputLayout (this);\n %2$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT)); \n\n %2$s.setPadding((int)getDip(2), (int)getDip(2) , (int)getDip(2) , (int)getDip(2) );\n%2$s.setGravity(Gravity.CENTER);\n%2$s.setHintEnabled(true);\n%2$s.setHint(\"%4$s\");\n%2$s.setBoxCornerRadii(5, 5, 5, 5);\n%2$s.setErrorEnabled(true);\n%2$s.setHintAnimationEnabled(true);\n\n%2$s.addView(%3$s);\n ((LinearLayout)%1$s).addView(%2$s);","color":"#C50067","name":"MaterialInput","typeName":"","palette":"32","type":" ","spec":"%m.view Name %s.inputOnly setInput %m.edittext Hint %s.inputOnly"},{"code":"((LinearLayout)%1$s).removeView(%3$s); \nfinal com.google.android.material.textfield.TextInputLayout %2$s \u003d new com.google.android.material.textfield.TextInputLayout (this);\n %2$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT)); \n\n %2$s.setPadding((int)getDip(2), (int)getDip(2) , (int)getDip(2) , (int)getDip(2) );\n%2$s.setGravity(Gravity.CENTER);\n%2$s.setHintEnabled(true);\n%2$s.setHint(\"%4$s\");\n%2$s.setBoxBackgroundMode(%2$s.BOX_BACKGROUND_OUTLINE); \n%2$s.setBoxStrokeColor(%5$s);\n%2$s.setBoxCornerRadii(%6$s, %6$s, %6$s, %6$s);\n%2$s.setErrorEnabled(true);\n%2$s.setHintAnimationEnabled(true);\n\n%2$s.addView(%3$s);\n ((LinearLayout)%1$s).addView(%2$s);","color":"#C50067","name":"Material Input v1","typeName":"","palette":"32","type":" ","spec":"%m.view Name %s.inputOnly to %m.edittext Hint %s.inputOnly color %m.color radius %d"},{"code":"if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\nCharSequence name \u003d \"Channel name 1\";\nString description \u003d \"Notification channel\";\nint importance \u003d NotificationManager.IMPORTANCE_HIGH;\nNotificationChannel channel \u003d new NotificationChannel(\"id 1\", name, importance);\nchannel.setDescription(description);\n\nNotificationManager notificationManager \u003d getSystemService(NotificationManager.class);\nnotificationManager.createNotificationChannel(channel);\n\n}","color":"#156912","name":"Channel","typeName":"","palette":"33","type":" ","spec":"Create Notification Channel"},{"code":"androidx.core.app.NotificationCompat.BigPictureStyle bpStyle \u003d new androidx.core.app.NotificationCompat.BigPictureStyle(); \nBitmap bigPicture \u003d BitmapFactory.decodeResource(getResources(), R.drawable.%1$s);\nbpStyle.bigPicture(bigPicture);\nbpStyle.setBigContentTitle(%2$s);\nbpStyle.setSummaryText(%3$s);\nIntent intent \u003d new Intent(%4$s.this, %4$s.class);\nintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\nPendingIntent pendingIntent \u003d PendingIntent.getActivity(%4$s.this, 0, intent, 0);\n\nandroidx.core.app.NotificationCompat.Builder builder \u003d new androidx.core.app.NotificationCompat.Builder(%4$s.this, \"id 1\")\n.setSmallIcon(R.drawable.%1$s)\n.setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))\n.setContentTitle(%2$s)\n.setContentText(%3$s)\n.setPriority(androidx.core.app.NotificationCompat.PRIORITY_MAX)\n.setStyle(bpStyle)\n.setOngoing(true)\n.setContentIntent(pendingIntent)\n.setAutoCancel(false);\n\nandroidx.core.app.NotificationManagerCompat notificationManager \u003d androidx.core.app.NotificationManagerCompat.from(%4$s.this);\nnotificationManager.notify(1, builder.build());","color":"#156912","name":"hahah","typeName":"","palette":"33","type":" ","spec":"BigPic Notif image %m.resource title %s subtitle %s activity %m.activity"},{"code":"//create moreblock named \"library\" and put libfloatblock and button block\n\n//close block \u003d exit the floating window\n//show block \u003d opens floting window\n\n//oncreate block \u003d put it on oncreate","color":"#324D75","name":"Read this","typeName":"","palette":"34","type":"h","spec":"Pls. Read This"},{"code":"}\nprivate WindowManager windowManager;\nprivate WindowManager.LayoutParams layoutParams;\nprivate View displayView;\n\n\nprivate void showFloatingWindow() {\nLayoutInflater layoutInflater \u003d LayoutInflater.from(this);\ndisplayView \u003d layoutInflater.inflate(R.layout.%1$s, null);\n\n\n\n%2$s\n\ndisplayView.setOnTouchListener(new FloatingOnTouchListener());\n\nwindowManager.addView(displayView, layoutParams);\n}\n\n\nprivate class FloatingOnTouchListener implements View.OnTouchListener { \nprivate int x;\nprivate int y;\n\n@Override public boolean onTouch(View view, MotionEvent event) {\n\nswitch (event.getAction()) { \ncase MotionEvent.ACTION_DOWN: \nx \u003d (int) event.getRawX(); \ny \u003d (int) event.getRawY(); \nbreak;\n\ncase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX(); \nint nowY \u003d (int) event.getRawY(); \nint movedX \u003d nowX - x; \nint movedY \u003d nowY - y; \nx \u003d nowX; y \u003d nowY; \nlayoutParams.x \u003d layoutParams.x + movedX; \nlayoutParams.y \u003d layoutParams.y + movedY; windowManager.updateViewLayout(view, layoutParams); \nbreak; \ndefault: \nbreak; \n}\n return true;\n }\n }\n public void closes(){\ntry{\nwindowManager.removeView(displayView);\n}\ncatch(Exception e){\n        }\n    }\n  private boolean show \u003d false; \n\n{\n","color":"#324D75","name":"libfloat","typeName":"","palette":"34","type":"c","spec":"FloatLib XML layout  %s.inputOnly"},{"code":"Button %1$s \u003d displayView.findViewById(R.id.%2$s);\n\n%1$s.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\n%3$s\n}\n});","color":"#324D75","name":"butt","typeName":"","palette":"34","type":"c","spec":"Button name %s.inputOnly ID %s.inputOnly"},{"code":"closes();","color":"#324D75","name":"close","typeName":"","palette":"34","type":" ","spec":"Close FloatingWindow"},{"code":"if (!android.provider.Settings.canDrawOverlays(MainActivity.this)){\n\tIntent intent \u003d new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\" + getPackageName()));\n    startActivity(intent);\n    }\n    else{\n    \tshowFloatingWindow();\n    }","color":"#324D75","name":"show","typeName":"","palette":"34","type":" ","spec":"Show Floating Window"},{"code":"showMessage(%1$s);","color":"#324D75","name":"toasta","typeName":"","palette":"34","type":" ","spec":"Toast %s"},{"code":"windowManager \u003d (WindowManager) getSystemService(WINDOW_SERVICE); \nlayoutParams \u003d new WindowManager.LayoutParams();\n\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; \n} else { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_PHONE; \n}\n\nlayoutParams.format \u003d PixelFormat.RGBA_8888;\nlayoutParams.gravity \u003d Gravity.LEFT | Gravity.TOP;\nlayoutParams.flags \u003d WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;\nlayoutParams.width \u003d WindowManager.LayoutParams.WRAP_CONTENT; layoutParams.height \u003d WindowManager.LayoutParams.WRAP_CONTENT;\nlayoutParams.x \u003d 0;\nlayoutParams.y \u003d 0;","color":"#324D75","name":"onCreate","typeName":"","palette":"34","type":" ","spec":"OnCreate Caller"},{"code":"windowManager \u003d (WindowManager) getSystemService(WINDOW_SERVICE); \nlayoutParams \u003d new WindowManager.LayoutParams();\n\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; \n} else { \nlayoutParams.type \u003d WindowManager.LayoutParams.TYPE_PHONE; \n}\n\nlayoutParams.format \u003d PixelFormat.RGBA_8888;\nlayoutParams.gravity \u003d Gravity.LEFT | Gravity.TOP;\nlayoutParams.flags \u003d WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL;\nlayoutParams.width \u003d WindowManager.LayoutParams.WRAP_CONTENT; layoutParams.height \u003d WindowManager.LayoutParams.WRAP_CONTENT;\nlayoutParams.x \u003d 0;\nlayoutParams.y \u003d 0;","color":"#324D75","name":"onCreateedittext","typeName":"","palette":"34","type":" ","spec":"OnCreate Caller for Edittext"},{"code":"LinearLayout %1$s \u003d displayView.findViewById(R.id.%2$s);\nEditText %3$s \u003d displayView.findViewById(R.id.%4$s);\n\n((LinearLayout)%1$s).removeView(%3$s); \nfinal com.google.android.material.textfield.TextInputLayout %5$s \u003d new com.google.android.material.textfield.TextInputLayout (this);\n %5$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT)); \n\n %5$s.setPadding((int)getDip(2), (int)getDip(2) , (int)getDip(2) , (int)getDip(2) );\n%5$s.setGravity(Gravity.CENTER);\n%5$s.setHintEnabled(true);\n%5$s.setHint(\"%6$s\");\n%5$s.setBoxCornerRadii(5, 5, 5, 5);\n%5$s.setErrorEnabled(true);\n%5$s.setHintAnimationEnabled(true);\n\n%5$s.addView(%3$s);\n ((LinearLayout)%1$s).addView(%5$s);\n\n","color":"#324D75","name":"Material Input","typeName":"","palette":"34","type":" ","spec":"LayoutName %s.inputOnly \u0026 ID%s.inputOnly | Edittext name %s.inputOnly \u0026 ID %s.inputOnly | Material %s.inputOnly Hint %s.inputOnly"},{"code":"LinearLayout %1$s \u003d displayView.findViewById(R.id.%2$s);\nEditText %3$s \u003d displayView.findViewById(R.id.%4$s);\n\n((LinearLayout)%1$s).removeView(%3$s); \nfinal com.google.android.material.textfield.TextInputLayout %5$s \u003d new com.google.android.material.textfield.TextInputLayout (this);\n %5$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT)); \n\n %5$s.setPadding((int)getDip(2), (int)getDip(2) , (int)getDip(2) , (int)getDip(2) );\n%5$s.setGravity(Gravity.CENTER);\n%5$s.setHintEnabled(true);\n%5$s.setHint(\"%6$s\");\n%5$s.setBoxBackgroundMode(%5$s.BOX_BACKGROUND_OUTLINE); \n%5$s.setBoxStrokeColor(%7$s);\n%5$s.setBoxCornerRadii(5, 5, 5, 5);\n%5$s.setErrorEnabled(true);\n%5$s.setHintAnimationEnabled(true);\n\n%5$s.addView(%3$s);\n ((LinearLayout)%1$s).addView(%5$s);","color":"#324D75","name":"Material Input2","typeName":"","palette":"34","type":" ","spec":"LayoutName %s.inputOnly \u0026 ID%s.inputOnly | Edittext name %s.inputOnly \u0026 ID %s.inputOnly | Material %s.inputOnly Hint %s.inputOnly | Color %m.color"},{"code":"\nImageView %1$s \u003d displayView.findViewById(R.id.%2$s);\nEditText %3$s \u003d displayView.findViewById(R.id.%4$s);\n\n%1$s.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View _view) {\nshowMessage(\"Click\");\r\n\t\t\t\tif (show) {\r\nshow \u003d false;\t\t\t\t\t\r\n\t\t\t\t\t//Hide password\t\t\t\t\t%3$s.setTransformationMethod(android.text.method.PasswordTransformationMethod.getInstance())\n\t\t\t\t}\r\n\t\t\t\telse {\t\nshow \u003d true;\t\t\t\t\r\n\t\t\t\t\t//Show password\t\t\t\t\t%3$s.setTransformationMethod(android.text.method.HideReturnsTransformationMethod.getInstance());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});","color":"#324D75","name":"password","typeName":"","palette":"34","type":" ","spec":"Show/Hide Password Name %s.inputOnly ID %s.inputOnly EditText %s.inputOnly ID %s.inputOnly"},{"code":"final LinearLayout %1$s \u003d displayView.findViewById(R.id.%2$s);\n\n%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%3$s,%4$s));\n","color":"#324D75","name":"Round","typeName":"","palette":"34","type":" ","spec":"RoundView Name %s.inputOnly ID %s.inputOnly Radius %d Color %m.color "},{"code":"LinearLayout exit \u003d displayView.findViewById(R.id.%1$s);\n       \nexit.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%2$s,%3$s));\n\nexit.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\n%4$s\n}\n});","color":"#324D75","name":"Round2","typeName":"","palette":"34","type":"c","spec":"HideView ID %s.inputOnly Radius %d Color %m.color "},{"code":"%1$s.setVisibility(View.GONE);         ","color":"#324D75","name":"gone","typeName":"","palette":"34","type":" ","spec":"GoneLayout %s.inputOnly"},{"code":"%1$s.setVisibility(View.VISIBLE);         ","color":"#324D75","name":"kita","typeName":"","palette":"34","type":" ","spec":"VisibleLayout %s.inputOnly"},{"code":"if (!android.provider.Settings.canDrawOverlays(MainActivity.this)){\n\tIntent intent \u003d new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\" + getPackageName()));\n    startActivity(intent);\n    }\n    else{\nIntent startMain \u003d new Intent(Intent.ACTION_MAIN); startMain.addCategory(Intent.CATEGORY_HOME); //startMain.setFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS); \nstartActivity(startMain);\n\n int LAYOUT_FLAG;\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;\n} else {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_PHONE;\n}\n\nfinal WindowManager.LayoutParams params \u003d new WindowManager.LayoutParams(\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    LAYOUT_FLAG,\n      \n    WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n     , \n\n    PixelFormat.TRANSPARENT);\n\n  final  WindowManager wm \u003d (WindowManager) getSystemService(WINDOW_SERVICE);\n    LayoutInflater inflater \u003d (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);\n    //View myView \u003d inflater.inflate(R.layout.floating, null);\n\nView myView \u003d (View) getLayoutInflater().inflate(R.layout.%1$s, null); \n\n\nLinearLayout hold \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\nhold.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)360, %3$s));\n\n    hold.setOnTouchListener(new OnTouchListener() {\nprivate int x;\nprivate int y;\n       @Override\n       public boolean onTouch(View v, MotionEvent event) {\n\n switch (event.getAction()) { \ncase MotionEvent.ACTION_DOWN: \nx \u003d (int) event.getRawX(); \ny \u003d (int) event.getRawY(); \nbreak;\n\ncase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX(); \nint nowY \u003d (int) event.getRawY(); \nint movedX \u003d nowX - x; \nint movedY \u003d nowY - y; \nx \u003d nowX; y \u003d nowY; \nparams.x \u003d params.x + movedX; \nparams.y \u003d params.y + movedY; wm.updateViewLayout(myView, params); \nbreak; \ndefault: \nbreak; \n}\n return true;\n }\n });\n\n   //Specify the view position\n       params.gravity \u003d Gravity.TOP | Gravity.LEFT;        //Initially view will be added to top-left corner\n       params.x \u003d 0;\n       params.y \u003d 0;\n\n%4$s\n\nwm.addView(myView, params);\n}\n","color":"#FF5240","name":"FloatNiCyberAlpha","typeName":"","palette":"35","type":"c","spec":"Layout %s.inputOnly Holder %s.inputOnly Color %m.color"},{"code":"if (!android.provider.Settings.canDrawOverlays(MainActivity.this)){\n\tIntent intent \u003d new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\" + getPackageName()));\n    startActivity(intent);\n    }\n    else{\nIntent startMain \u003d new Intent(Intent.ACTION_MAIN); startMain.addCategory(Intent.CATEGORY_HOME); //startMain.setFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS); \nstartActivity(startMain);\n\n int LAYOUT_FLAG;\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;\n} else {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_PHONE;\n}\n\nfinal WindowManager.LayoutParams params \u003d new WindowManager.LayoutParams(\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    WindowManager.LayoutParams.WRAP_CONTENT,LAYOUT_FLAG, WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,\n     PixelFormat.TRANSPARENT);\n\n  final  WindowManager wm \u003d (WindowManager) getSystemService(WINDOW_SERVICE);\n    LayoutInflater inflater \u003d (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);\n    //View myView \u003d inflater.inflate(R.layout.floating, null);\n\nfinal View myView \u003d (View) getLayoutInflater().inflate(R.layout.%1$s, null); \n\n\nLinearLayout hold \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\nhold.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)360, %3$s));\n\n    hold.setOnTouchListener(new OnTouchListener() {\nprivate int x;\nprivate int y;\n       @Override\n       public boolean onTouch(View v, MotionEvent event) {\n\n switch (event.getAction()) { \ncase MotionEvent.ACTION_DOWN: \nx \u003d (int) event.getRawX(); \ny \u003d (int) event.getRawY(); \nbreak;\n\ncase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX(); \nint nowY \u003d (int) event.getRawY(); \nint movedX \u003d nowX - x; \nint movedY \u003d nowY - y; \nx \u003d nowX; y \u003d nowY; \nparams.x \u003d params.x + movedX; \nparams.y \u003d params.y + movedY; wm.updateViewLayout(myView, params); \nbreak; \ndefault: \nbreak; \n}\n return true;\n }\n });\n\n   //Specify the view position\n       params.gravity \u003d Gravity.TOP | Gravity.LEFT;        //Initially view will be added to top-left corner\n       params.x \u003d 0;\n       params.y \u003d 0;\n\n%4$s\n\nwm.addView(myView, params);\n}\n","color":"#FF5240","name":"FloatNiCyberAlpha2","typeName":"","palette":"35","type":"c","spec":"2Layout %s.inputOnly Holder %s.inputOnly Color %m.color"},{"code":"final LinearLayout   %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n\n%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%3$s, %4$s));","color":"#FF5240","name":"roundbilog","typeName":"","palette":"35","type":" ","spec":"LinearView Name %s.inputOnly ID %s.inputOnly Radius %d Color %m.color"},{"code":"final FrameLayout   %1$s \u003d (FrameLayout) myView.findViewById(R.id.%2$s);\n\n%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%3$s, %4$s));","color":"#FF5240","name":"roundbilogframe","typeName":"","palette":"35","type":" ","spec":"LinearView Name %s.inputOnly ID %s.inputOnly Radius %d Color %m.color"},{"code":"wm.removeView(myView);","color":"#FF5240","name":"ExitWindow","typeName":"","palette":"35","type":" ","spec":"Exit Window"},{"code":"Button %1$s \u003d (Button) myView.findViewById(R.id.%2$s);\n\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) {\n%3$s\n} });","color":"#FF5240","name":"buttonview","typeName":"","palette":"35","type":"c","spec":"Button Name %s.inputOnly ID %s.inputOnly"},{"code":"LinearLayout %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) {\n%3$s\n} });","color":"#FF5240","name":"holderlin","typeName":"","palette":"35","type":"c","spec":"Holder Onclick Name %s.inputOnly ID %s.inputOnly"},{"code":"%1$s.setVisibility(View.GONE);         ","color":"#FF5240","name":"gonkil","typeName":"","palette":"35","type":" ","spec":"Layout Gone %s.inputOnly"},{"code":"%1$s.setVisibility(View.VISIBLE);         ","color":"#FF5240","name":"visiball","typeName":"","palette":"35","type":" ","spec":"Layout Visible %s.inputOnly"},{"code":"if (!android.provider.Settings.canDrawOverlays(MainActivity.this)){\n\tIntent intent \u003d new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\" + getPackageName()));\n    startActivity(intent);\n    }\n    else{\nIntent startMain \u003d new Intent(Intent.ACTION_MAIN); startMain.addCategory(Intent.CATEGORY_HOME); //startMain.setFlags(Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS); \nstartActivity(startMain);\n\n int LAYOUT_FLAG;\nif (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O) {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;\n} else {\n    LAYOUT_FLAG \u003d WindowManager.LayoutParams.TYPE_PHONE;\n}\n\nfinal WindowManager.LayoutParams params \u003d new WindowManager.LayoutParams(\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    WindowManager.LayoutParams.WRAP_CONTENT,\n    LAYOUT_FLAG,\n      \n    WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n     , \n\n    PixelFormat.TRANSPARENT);\n\n  final  WindowManager wm \u003d (WindowManager) getSystemService(WINDOW_SERVICE);\n    LayoutInflater inflater \u003d (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);\n    //View myView \u003d inflater.inflate(R.layout.floating, null);\n\nfinal View myView \u003d (View) getLayoutInflater().inflate(R.layout.%1$s, null); \n\n\nLinearLayout hold \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\nhold.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)360, %3$s));\n\n    hold.setOnTouchListener(new OnTouchListener() {\nprivate int x;\nprivate int y;\n       @Override\n       public boolean onTouch(View v, MotionEvent event) {\n\n switch (event.getAction()) { \ncase MotionEvent.ACTION_DOWN: \nx \u003d (int) event.getRawX(); \ny \u003d (int) event.getRawY(); \nbreak;\n\ncase MotionEvent.ACTION_MOVE: int nowX \u003d (int) event.getRawX(); \nint nowY \u003d (int) event.getRawY(); \nint movedX \u003d nowX - x; \nint movedY \u003d nowY - y; \nx \u003d nowX; y \u003d nowY; \nparams.x \u003d params.x + movedX; \nparams.y \u003d params.y + movedY; wm.updateViewLayout(myView, params); \nbreak; \ndefault: \nbreak; \n}\n return true;\n }\n });\n\n   //Specify the view position\n       params.gravity \u003d Gravity.TOP | Gravity.LEFT;        //Initially view will be added to top-left corner\n       params.x \u003d 0;\n       params.y \u003d 0;\n\n%4$s\n\nwm.addView(myView, params);\n}\n","color":"#FF5240","name":"Float","typeName":"","palette":"0","type":"c","spec":"Layout %s.inputOnly Holder %s.inputOnly Color %m.color"},{"code":"LinearLayout   %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n\n%1$s.setBackground(new android.graphics.drawable.GradientDrawable() { public android.graphics.drawable.GradientDrawable getIns(int a, int b) { this.setCornerRadius(a); this.setColor(b); return this; } }.getIns((int)%3$s, %4$s));","color":"#FF5240","name":"round","typeName":"","palette":"0","type":" ","spec":"LinearView Name %s.inputOnly ID %s.inputOnly Radius %d Color %m.color"},{"code":"wm.removeView(myView);","color":"#FF5240","name":"Exit","typeName":"","palette":"0","type":" ","spec":"Exit Window"},{"code":"Button %1$s \u003d (Button) myView.findViewById(R.id.%2$s);\n\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) {\n%3$s\n} });","color":"#FF5240","name":"butt","typeName":"","palette":"0","type":"c","spec":"Button Name %s.inputOnly ID %s.inputOnly"},{"code":"LinearLayout %1$s \u003d (LinearLayout) myView.findViewById(R.id.%2$s);\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) {\n%3$s\n} });","color":"#FF5240","name":"holder","typeName":"","palette":"0","type":"c","spec":"Holder Onclick Name %s.inputOnly ID %s.inputOnly"},{"code":"%1$s.setVisibility(View.GONE);         ","color":"#FF5240","name":"gon","typeName":"","palette":"0","type":" ","spec":"Layout Gone %s.inputOnly"},{"code":"%1$s.setVisibility(View.VISIBLE);         ","color":"#FF5240","name":"visib","typeName":"","palette":"0","type":" ","spec":"Layout Visible %s.inputOnly"},{"code":"ListView %1$s \u003d (ListView) myView.findViewById(R.id.%2$s);\nArrayList\u003cString\u003e %3$s \u003d new ArrayList\u003c\u003e();\n\n%4$s\n\n%1$s.setAdapter(new ArrayAdapter\u003cString\u003e(getBaseContext(), android.R.layout.simple_list_item_1, %3$s));\r","color":"#FF5240","name":"custlist","typeName":"","palette":"35","type":"c","spec":"ListView Name %s.inputOnly ID %s.inputOnly ListSrting %s.inputOnly"},{"code":"((BaseAdapter)%1$s.getAdapter()).notifyDataSetChanged();","color":"#FF5240","name":"reflist","typeName":"","palette":"35","type":" ","spec":"Refresh List %s.inputOnly"},{"code":"%2$s.add(%1$s);","color":"#FF5240","name":"stringmoer","typeName":"","palette":"35","type":" ","spec":"Add %s to ListString %s.inputOnly"},{"code":"%1$s.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onItemClick(AdapterView\u003c?\u003e _param1, View _param2, int _param3, long _param4) {\r\n\t\t\t\tfinal int _position \u003d _param3;\r\n\t\t\t\t%2$s\r\t\t\t\r\n\t\t\t}\r\n\t\t});","color":"#FF5240","name":"onclicker","typeName":"","palette":"35","type":"c","spec":"List onclick %s.inputOnly"},{"code":"_position","color":"#FF5240","name":"postal","typeName":"","palette":"35","type":"d","spec":"position"},{"code":"LinearLayout %1$s \u003d myView.findViewById(R.id.%2$s);\nEditText %3$s \u003d myView.findViewById(R.id.%4$s);\n\n((LinearLayout)%1$s).removeView(%3$s); \nfinal com.google.android.material.textfield.TextInputLayout %5$s \u003d new com.google.android.material.textfield.TextInputLayout (MainActivity.this);\n %5$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT)); \n\n %5$s.setPadding((int)getDip(2), (int)getDip(2) , (int)getDip(2) , (int)getDip(2) );\n%5$s.setGravity(Gravity.CENTER);\n%5$s.setHintEnabled(true);\n%5$s.setHint(\"%6$s\");\n%5$s.setBoxBackgroundMode(%5$s.BOX_BACKGROUND_OUTLINE); \n%5$s.setBoxStrokeColor(%7$s);\n%5$s.setBoxCornerRadii(5, 5, 5, 5);\n%5$s.setErrorEnabled(true);\n%5$s.setHintAnimationEnabled(true);\n\n%5$s.addView(%3$s);\n ((LinearLayout)%1$s).addView(%5$s);","color":"#FF5240","name":"Material Input2","typeName":"","palette":"35","type":" ","spec":"LayoutName %s.inputOnly \u0026 ID%s.inputOnly | Edittext name %s.inputOnly \u0026 ID %s.inputOnly | Material %s.inputOnly Hint %s.inputOnly | Color %m.color"},{"code":"%1$s.getText().toString()","color":"#FF5240","name":"gtext","typeName":"","palette":"35","type":"s","spec":"%s.inputOnly getText"},{"code":"RequestNetwork.RequestListener %1$s \u003d new RequestNetwork.RequestListener() {\r\n\t@Override\r\n\t\t\tpublic void onResponse(String _param1, String _param2) {\r\n\t\t\t\tfinal String _tag \u003d _param1;\r\n\t\t\t\tfinal String _response \u003d _param2;\r\n\t\t\t%2$s\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void onErrorResponse(String _param1, String _param2) {\r\n\t\t\t\tfinal String _tag \u003d _param1;\r\n\t\t\t\tfinal String _message \u003d _param2;\r\n\t\t\t\t%3$s\r\n\t\t\t}\r\n\t\t};","color":"#FF5240","name":"requestmo","typeName":"","palette":"35","type":"e","spec":"%s.inputOnly Request Network"},{"code":"_response","color":"#FF5240","name":"respo","typeName":"","palette":"35","type":"s","spec":"response"},{"code":"%1$s.smoothScrollToPosition((int)(%2$s.size()));","color":"#FF5240","name":"smoter","typeName":"","palette":"35","type":" ","spec":"%s.inputOnly smoothScroll %s.inputOnly"},{"code":"EditText %1$s \u003d myView.findViewById(R.id.%2$s);\n\n%1$s.setText(%3$s);","color":"#FF5240","name":"texsor","typeName":"","palette":"35","type":" ","spec":"Name %s.inputOnly ID %s.inputOnly setText %s"},{"code":"%1$s.setText(%2$s);","color":"#FF5240","name":"texsor2","typeName":"","palette":"35","type":" ","spec":"%s.inputOnly NonID setText %s"},{"code":"boolean isAppInstalled \u003d appInstalledOrNot(\"%1$s\");\nif (isAppInstalled) {\r\n\t\t\t%2$s\r\n\t\t}\n}\r\nprivate boolean appInstalledOrNot(String uri) { \n\nandroid.content.pm.PackageManager pm \u003d getPackageManager(); \ntry { \n\npm.getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES); \nreturn true;\n} catch (android.content.pm.PackageManager.NameNotFoundException e) { } \n\nreturn false;","color":"#2E3F90","name":"antiremod","typeName":"","palette":"0","type":"c","spec":"PackageName %s.inputOnly"},{"code":"EditText %1$s \u003d myView.findViewById(R.id.%2$s);\n%1$s.setCursorVisible(%3$s);\n%1$s.setFocusable(%3$s);","color":"#FF5240","name":"primera","typeName":"","palette":"35","type":" ","spec":"SetFocus Name %s.inputOnly ID %s.inputOnly %b"},{"code":"TextView %1$s \u003d (TextView)myView.findViewById(R.id.%2$s); %1$s.setEllipsize(TextUtils.TruncateAt.MARQUEE); %1$s.setText(\"%3$s\"); %1$s.setSelected(true); %1$s.setSingleLine(true);","color":"#FF5240","name":"running text","typeName":"","palette":"35","type":" ","spec":"Running Text setName %s.inputOnly setID %s.inputOnly setText %s.inputOnly "},{"code":"ImageView %1$s \u003d (ImageView) myView.findViewById(R.id.%2$s);\n\n%1$s.setOnClickListener(new OnClickListener() { \n@Override \npublic void onClick(View v) {\n\n%3$s\n\n} });","color":"#FF5240","name":"paste","typeName":"","palette":"35","type":"c","spec":"Icon Paste  Name %s.inputOnly ID %s.inputOnly"},{"code":"EditText %1$s \u003d myView.findViewById(R.id.%2$s);\n\nandroid.content.ClipboardManager clipboard \u003d (android.content.ClipboardManager) getSystemService(CLIPBOARD_SERVICE);\nClipData clipData \u003d clipboard.getPrimaryClip();\n\nString clip \u003d clipData.getItemAt(0).getText().toString();\n%1$s.setText(clip);\n","color":"#FF5240","name":"editpaste","typeName":"","palette":"35","type":" ","spec":"EditText Paste Name %s.inputOnly ID %s.inputOnly"},{"code":"%1$s.getLineCount();\n%1$s.append(String.valueOf(%1$s)+\"\\n\");","color":"#FF5240","name":"appendix","typeName":"","palette":"35","type":" ","spec":"%s.inputOnly append"},{"code":"%1$s.setProgress(%2$s);","color":"#2E3F90","name":"","typeName":"","palette":"0","type":" ","spec":"%s.inputOnly setProgress %d"},{"code":"KProgressHUD.create(MainActivity.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE).show();","color":"#2B903B","name":"HUD SpinnerOnly","typeName":"","palette":"37","type":" ","spec":"SpinnerOnlyHUD"},{"code":"%1$s.setGraceTime(%1$s);","color":"#2B903B","name":"HUD GraceTime","typeName":"","palette":"37","type":" ","spec":"%s.inputOnly SetGraceTime %d"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%5$s.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE).setLabel(\"%2$s\").setDetailsLabel(\"%3$s\").setCancellable(%4$s);\n%6$s\n%1$s.show();","color":"#2B903B","name":"HUD Spinner w/ Label","typeName":"","palette":"37","type":"c","spec":"%s.inputOnly SpinnerHUD Label %s.inputOnly Details %s.inputOnly Cancellable %b to %m.activity"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%3$s.this).setStyle(KProgressHUD.Style.PIE_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"PieHUDy","typeName":"","palette":"37","type":"c","spec":"PieHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%3$s.this).setStyle(KProgressHUD.Style.ANNULAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"AnnularHUDy","typeName":"","palette":"37","type":"c","spec":"AnnularHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%3$s.this).setStyle(KProgressHUD.Style.BAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"BarHUDy","typeName":"","palette":"37","type":"c","spec":"BarHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s.setProgress((int)%2$s);\n%1$s.setDetailsLabel(String.valueOf((long)(%2$s)).concat(\"%3$s\"));","color":"#2B903B","name":"CustomProgy","typeName":"","palette":"37","type":" ","spec":"SetProgress Name %s.inputOnly %d with label  %s.inputOnly"},{"code":"//*//","color":"#943D51","name":"ATPH AutoInject","typeName":"","palette":"38","type":"h","spec":"ATPH AutoInject"},{"code":"}\nprivate class DownloadTask extends AsyncTask\u003cString, Integer, String\u003e {\nKProgressHUD %1$s;\n@Override\nprotected void onPreExecute() {\nsuper.onPreExecute();\n%2$s\n}\n@Override\nprotected String doInBackground(String... address) {\ntry {\nfilename\u003d URLUtil.guessFileName(address[0], null, null);\nint resCode \u003d -1;\njava.io.InputStream in \u003d null;\njava.net.URL url \u003d new java.net.URL(address[0]);\njava.net.URLConnection urlConn \u003d url.openConnection();\nif (!(urlConn instanceof java.net.HttpURLConnection)) {\nthrow new java.io.IOException(\"URL is not an Http URL\"); }\njava.net.HttpURLConnection httpConn \u003d (java.net.HttpURLConnection) urlConn; httpConn.setAllowUserInteraction(false); httpConn.setInstanceFollowRedirects(true); httpConn.setRequestMethod(\"GET\"); httpConn.connect();\nresCode \u003d httpConn.getResponseCode();\nif (resCode \u003d\u003d java.net.HttpURLConnection.HTTP_OK) {\nin \u003d httpConn.getInputStream();\nsize \u003d httpConn.getContentLength();\n\n} else { result \u003d \"There was an error\"; }","color":"#943D51","name":"Autinject PreexecuteHUD","typeName":"","palette":"38","type":"c","spec":"1. Autinject PreExecute w/ HUD %s.inputOnly "},{"code":"/**/\n%s","color":"#943D51","name":"1.at","typeName":"","palette":"38","type":"c","spec":"1.a Put your path below"},{"code":"java.io.File file \u003d new java.io.File(path);\n\njava.io.OutputStream output \u003d new java.io.FileOutputStream(file);\ntry {\nint bytesRead;\nsumCount \u003d 0;\nbyte[] buffer \u003d new byte[1024];\nwhile ((bytesRead \u003d in.read(buffer)) !\u003d -1) {\noutput.write(buffer, 0, bytesRead);\nsumCount +\u003d bytesRead;\nif (size \u003e 0) {\npublishProgress((int)Math.round(sumCount*100 / size));\n}\n}\n} finally {\noutput.close();\n}\nresult \u003d\"\";\nin.close();\n} catch (java.net.MalformedURLException e) {\nresult \u003d e.getMessage();\n} catch (java.io.IOException e) {\nresult \u003d e.getMessage();\n} catch (Exception e) {\nresult \u003d e.toString();\n}\nreturn result;\n\n}\n@Override\nprotected void onProgressUpdate(Integer... values) {\nsuper.onProgressUpdate(values);\n%1$s\n}","color":"#943D51","name":"progressm","typeName":"","palette":"38","type":"c","spec":"2. ProgressUpdater"},{"code":"@Override\nprotected void onPostExecute(String s){\n\n%1$s\n}","color":"#943D51","name":"endod","typeName":"","palette":"38","type":"c","spec":"3. Unzip file below"},{"code":"new DownloadTask().execute(%1$s);","color":"#943D51","name":"seturl","typeName":"","palette":"38","type":" ","spec":"Download Button setURL %s"},{"code":"values[values.length - 1]","color":"#943D51","name":"values","typeName":"","palette":"38","type":"d","spec":"Values Update"},{"code":"KProgressHUD.create(MainActivity.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)\n.%1$s\n.show();","color":"#943D51","name":"SpinnerOnly","typeName":"","palette":"38","type":"c","spec":"SpinnerOnlyHUD"},{"code":"%1$s.setGraceTime(%1$s);","color":"#943D51","name":"GraceTime","typeName":"","palette":"38","type":" ","spec":"%s.inputOnly SetGraceTime %d"},{"code":"%1$s \u003d new KProgressHUD(%5$s.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE).setLabel(\"%2$s\").setDetailsLabel(\"%3$s\").setCancellable(%4$s);\n%6$s\n%1$s.show();","color":"#943D51","name":"Spinner w/ Label","typeName":"","palette":"38","type":"c","spec":"%s.inputOnly SpinnerHUD Label %s.inputOnly Details %s.inputOnly Cancellable %b to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.PIE_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"PieHUDd","typeName":"","palette":"38","type":"c","spec":"PieHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.ANNULAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"AnnularHUDd","typeName":"","palette":"38","type":"c","spec":"AnnularHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.BAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#943D51","name":"BarHUDd","typeName":"","palette":"38","type":"c","spec":"BarHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s.setProgress(%2$s);\n%1$s.setDetailsLabel(String.valueOf((long)(%2$s)).concat(\"%3$s\"));","color":"#943D51","name":"CustomProgg","typeName":"","palette":"38","type":" ","spec":"SetProgress Name %s.inputOnly %d with label  %s.inputOnly"},{"code":"%1$s.setDimAmount(0.%2$sf);","color":"#943D51","name":"Dimmer","typeName":"","palette":"38","type":" ","spec":"%s.inputOnly Set Dim %d (1-9 only)"},{"code":"%1$s.smoothScrollToPosition((int)%2$s.size());","color":"#2E3F90","name":"smooth","typeName":"","palette":"0","type":" ","spec":"%s.inputOnly smoothScroll %s.inputOnly"},{"code":"(int)%1$s.size()","color":"#2E3F90","name":"li","typeName":"","palette":"0","type":"d","spec":"lengoflist %s.inputOnly"},{"code":"FloatingViewManager mFloatingViewManager \u003d new FloatingViewManager(%1$s.this, null);","color":"#7BD3B3","name":"RLFVCreate","typeName":"","palette":"39","type":" ","spec":"%m.activity createRLFV "},{"code":"final FloatingViewManager.Options options \u003d new FloatingViewManager.Options();\n\t\toptions.overMargin \u003d(int) %2$s;\nfinal ImageView iconView \u003d new ImageView(%1$s.this);\niconView.setScaleType(android.widget.ImageView.ScaleType.FIT_CENTER);","color":"#7BD3B3","name":"RLFVCreateFloatingIcon","typeName":"","palette":"39","type":" ","spec":"%m.activity RLFV CreateFloatingIcon setOverlayMargin %d"},{"code":"Glide.with(getApplicationContext()).load(Uri.parse(%s)).into(iconView);","color":"#7BD3B3","name":"RLFVsetFloatingIcon0","typeName":"","palette":"39","type":" ","spec":"RLFV setIcon from url %s"},{"code":"iconView","color":"#7BD3B3","name":"RLFVIconView","typeName":"imageview","palette":"39","type":"p","spec":"RLFV FloatingImageView"},{"code":"iconView.setImageResource(R.drawable.%s);","color":"#7BD3B3","name":"RLFVsetFloatingIcon1","typeName":"","palette":"39","type":" ","spec":"RLFV setIcon %m.resource"},{"code":"mFloatingViewManager.setFixedTrashIconImage(R.drawable.%s);","color":"#7BD3B3","name":"RLFVsetFixedTrashIconImage","typeName":"","palette":"39","type":" ","spec":"RLFV setFixedTrashIconImage %m.resource "},{"code":"mFloatingViewManager.setActionTrashIconImage(R.drawable.%s);","color":"#7BD3B3","name":"RLFVsetActionTrashIconImage","typeName":"","palette":"39","type":" ","spec":"RLFV setActionTrashIconImage %m.resource "},{"code":"mFloatingViewManager.addViewToWindow(iconView, options);\niconView.setLayoutParams(new android.widget.ImageSwitcher.LayoutParams( %1$s, %1$s));","color":"#7BD3B3","name":"RLFVBuild","typeName":"","palette":"39","type":" ","spec":"RLFV Build and setIconSize %d"},{"code":"KProgressHUD.create(MainActivity.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE)\n.%1$s\n.show();","color":"#2B903B","name":"SpinnerOnly","typeName":"","palette":"40","type":"c","spec":"SpinnerOnlyHUD"},{"code":"%1$s.setGraceTime(%1$s);","color":"#2B903B","name":"GraceTime","typeName":"","palette":"40","type":" ","spec":"%s.inputOnly SetGraceTime %d"},{"code":"KProgressHUD.create(%4$s.this).setStyle(KProgressHUD.Style.SPIN_INDETERMINATE).setLabel(\"%1$s\").setDetailsLabel(\"%2$s\").setCancellable(%3$s)\n%5$s\n.show();","color":"#2B903B","name":"Spinner w/ Label","typeName":"","palette":"40","type":"c","spec":"SpinnerHUD Label %s.inputOnly Details %s.inputOnly Cancellable %b to %m.activity"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%3$s.this).setStyle(KProgressHUD.Style.PIE_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"PieHUD","typeName":"","palette":"40","type":"c","spec":"PieHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"KProgressHUD %1$s \u003d KProgressHUD.create(%3$s.this).setStyle(KProgressHUD.Style.ANNULAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"AnnularHUD","typeName":"","palette":"40","type":"c","spec":"AnnularHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s \u003d new KProgressHUD(%3$s.this).setStyle(KProgressHUD.Style.BAR_DETERMINATE).setLabel(\"%2$s\")\n.setMaxProgress(100);\n%4$s\n%1$s.show();\n","color":"#2B903B","name":"BarHUD","typeName":"","palette":"40","type":"c","spec":"BarHUD Name %s.inputOnly Label %s.inputOnly to %m.activity"},{"code":"%1$s.setProgress(%2$s);\n%1$s.setDetailsLabel(String.valueOf((long)(%2$s)).concat(\"%3$s\"));","color":"#2B903B","name":"CustomProg","typeName":"","palette":"40","type":" ","spec":"SetProgress Name %s.inputOnly %d with label  %s.inputOnly"},{"code":"%s \u003d new FloatNavBar(%s.this);","color":"#5900F4","name":"navBar1","typeName":"","palette":"40","type":" ","spec":"%m.FloatNavBar Create %m.activity"},{"code":"%s.addItem(%s,R.drawable.%s,%s,%s);","color":"#5900F4","name":"navBar2","typeName":"","palette":"40","type":" ","spec":"%m.FloatNavBar addItem Id %d Icon %m.resource title %s color %m.color"},{"code":"%s.setItemSelected(%s);","color":"#5900F4","name":"navbar4","typeName":"","palette":"40","type":" ","spec":"%m.FloatNavBar setItemSelected %d"},{"code":"%s.setOnItemSelectedListener(new FloatNavBar.OnItemSelectedListener(){\n@Override\npublic void onItemSelected(int id) {\n\n%s\n\n}\n});","color":"#5900F4","name":"navbar5","typeName":"","palette":"40","type":"c","spec":"%m.FloatNavBar setOnItemSelectedListener"},{"code":"id","color":"#5900F4","name":"navbar7","typeName":"","palette":"40","type":"d","spec":"Item Id"},{"code":"%s.Dark();","color":"#5900F4","name":"navBar","typeName":"","palette":"40","type":" ","spec":"%m.FloatNavBar Dark Theme"},{"code":"ViewGroup contentparent \u003d findViewById(android.R.id.content);\ncontentparent.addView(%s);","color":"#5900F4","name":"navbar3","typeName":"","palette":"40","type":" ","spec":"%m.FloatNavBar show"},{"code":"%1$s.getBackground().setAlpha(%2$s);","color":"#FF0E00","name":"alpha","typeName":"","palette":"22","type":" ","spec":"%s.inputOnly SetAlpha %d (0 is Transpa and 255 is Opaque)"},{"code":"new IOSDialog.Builder(%1$s.this)\n%2$s\n.show();","color":"#C3C3C3","name":"IOSDiag","typeName":"","palette":"0","type":"c","spec":"IOS Dialog Create %m.activity"},{"code":".setTitle(\"%1$s\")","color":"#C3C3C3","name":"title","typeName":"","palette":"0","type":" ","spec":"Set Title %s.inputOnly"},{"code":".setMessage(\"%1$s\")","color":"#C3C3C3","name":"Message ","typeName":"","palette":"0","type":" ","spec":"Set Message %s.inputOnly"},{"code":"\n.setPositiveButton(\"%1$s\", \n%2$s\n)\n","color":"#C3C3C3","name":"PosButton","typeName":"","palette":"0","type":"c","spec":"SetPositive Button %s.inputOnly"},{"code":"\n.setNegativeButton(\"%1$s\", null)","color":"#C3C3C3","name":"NegButton","typeName":"","palette":"0","type":" ","spec":"Set Negative Button %s.inputOnly"},{"code":"IOSSheetDialog.SheetItem[] %1$s \u003d new IOSSheetDialog.SheetItem[%2$s];\n%3$s\n","color":"#C3C3C3","name":"IOS Sheet Style Item","typeName":"","palette":"0","type":"c","spec":"IOS Sheet Item %s.inputOnly Item %d"},{"code":"%1$s[%2$s] \u003d new IOSSheetDialog.SheetItem(\"%3$s\", IOSSheetDialog.SheetItem.RED); ","color":"#C3C3C3","name":"Red","typeName":"","palette":"0","type":" ","spec":"RedItem %s.inputOnly ItemNumber %d Content %s.inputOnly"},{"code":"%1$s[%2$s] \u003d new IOSSheetDialog.SheetItem(\"%3$s\", IOSSheetDialog.SheetItem.BLUE); ","color":"#C3C3C3","name":"Blue","typeName":"","palette":"0","type":" ","spec":"BlueItem %s.inputOnly ItemNumber %d Content %s.inputOnly"},{"code":"IOSSheetDialog %1$s \u003d new IOSSheetDialog.Builder(%2$s.this) .setTitle(\"%3$s\").setData(%4$s, null).show();","color":"#C3C3C3","name":"IOS SheetDialog","typeName":"","palette":"0","type":" ","spec":"SheetDialog %s.inputOnly %m.activity Title %s.inputOnly Item %s.inputOnly"},{"code":"//This block is arranged and coded by CyberAlpha PH","color":"#7B7B7B","name":"Diamo","typeName":"","palette":"42","type":"h","spec":"IOS Dialog Style"},{"code":"iOSDialogBuilder %1$s \u003d new iOSDialogBuilder(%2$s.this);\n%1$s\n%3$s\n.build().show();","color":"#7B7B7B","name":"IOSDialogv2","typeName":"","palette":"42","type":"c","spec":"IOS Dialog %s.inputOnly to %m.activity "},{"code":".setTitle(%1$s)","color":"#7B7B7B","name":"title","typeName":"","palette":"42","type":" ","spec":"Set Title%s"},{"code":".setSubtitle(%1$s) \t","color":"#7B7B7B","name":"Message","typeName":"","palette":"42","type":" ","spec":"Set Message %s"},{"code":".setBoldPositiveLabel(%1$s)","color":"#7B7B7B","name":"Bold","typeName":"","palette":"42","type":" ","spec":"SetBoldPositive %b"},{"code":"\t.setCancelable(%1$s)","color":"#7B7B7B","name":"Cancelable","typeName":"","palette":"42","type":" ","spec":"Set Cancelable %b"},{"code":".setPositiveListener(%1$s,new iOSDialogClickListener() \n{ \t @Override \t public void onClick(iOSDialog dialog) { \t\t\n%2$s\t \n}\n})\t","color":"#7B7B7B","name":"Positive Listener","typeName":"","palette":"42","type":"c","spec":"Set Positive Listener %s"},{"code":".setNegativeListener(%1$s, new iOSDialogClickListener() \n{ \t \n@Override \t public void onClick(iOSDialog dialog) { \t\t\n%2$s\n}\n})","color":"#7B7B7B","name":"Negative","typeName":"","palette":"42","type":"c","spec":"Set Negative Listener %s"},{"code":"dialog.dismiss(); ","color":"#7B7B7B","name":"Dismiss","typeName":"","palette":"42","type":" ","spec":"Dismiss"},{"code":"PrettyDialog %1$s \u003d new PrettyDialog(%2$s.this);\n%1$s\n%3$s\n.show();","color":"#666CAC","name":"Pretty","typeName":"","palette":"43","type":"c","spec":"PrettyDialog %s.inputOnly to %m.activity"},{"code":".setTitle(%1$s)","color":"#666CAC","name":"Title","typeName":"","palette":"43","type":" ","spec":"Set Title %s"},{"code":".setMessage(%1$s)","color":"#666CAC","name":"essage","typeName":"","palette":"43","type":" ","spec":"Set Message %s"},{"code":".setIcon(R.drawable.%1$s)","color":"#666CAC","name":"ico","typeName":"","palette":"43","type":" ","spec":"Set Icon %m.resource"},{"code":".setIcon(\nR.drawable.%1$s,\nR.color.pdlg_color_none,\nnew PrettyDialogCallback() { \t \n@Override \t public void onClick() \n{ \t\t\n%2$s\n} \t\n})","color":"#666CAC","name":"iconclick","typeName":"","palette":"43","type":"c","spec":"Set Icon %m.resource w/ Onclick"},{"code":".addButton\n(%1$s,%2$s ,%3$s, new PrettyDialogCallback() \n{\t\n @Override \t\t\n public void onClick() \n{ \t\t\t\n %4$s\t\t\n} \t\t\n} \t) \t","color":"#666CAC","name":"OKBut","typeName":"","palette":"43","type":"c","spec":"Set OK button %s TextColor %s ButtonColor %s"},{"code":".addButton\n(%1$s,%2$s ,%3$s, new PrettyDialogCallback() \n{\t\n @Override \t\t\n public void onClick() \n{ \t\t\t\n %4$s\t\t\n} \t\t\n} \t) \t","color":"#666CAC","name":"NoBut","typeName":"","palette":"43","type":"c","spec":"Set Cancel button %s TextColor %s ButtonColor %s"},{"code":".setAnimationEnabled(%1$s)","color":"#666CAC","name":"anima","typeName":"","palette":"43","type":" ","spec":"SetAnimation %b"},{"code":".setGravity(Gravity.%1$s)","color":"#666CAC","name":"grav","typeName":"","palette":"43","type":" ","spec":"Set Gravity %s.inputOnly"},{"code":".setTypeface(Typeface.createFromAsset(getResources().getAssets(),\"fonts/%1$s.ttf\"))","color":"#666CAC","name":"fot","typeName":"","palette":"43","type":" ","spec":"SetFont %m.font"},{"code":".setMessageColor(%1$s)","color":"#666CAC","name":"messcolor","typeName":"","palette":"43","type":" ","spec":"SetMessageColor %s"},{"code":"R.color.pdlg_color_black","color":"#666CAC","name":"blakc","typeName":"","palette":"43","type":"s","spec":"Black"},{"code":"R.color.pdlg_color_blue","color":"#666CAC","name":"blue","typeName":"","palette":"43","type":"s","spec":"Blue"},{"code":"R.color.pdlg_color_gray","color":"#666CAC","name":"gray","typeName":"","palette":"43","type":"s","spec":"Gray"},{"code":"R.color.pdlg_color_green","color":"#666CAC","name":"green","typeName":"","palette":"43","type":"s","spec":"Green"},{"code":"R.color.pdlg_color_red","color":"#666CAC","name":"red","typeName":"","palette":"43","type":"s","spec":"Red"},{"code":"R.color.pdlg_color_white","color":"#666CAC","name":"white","typeName":"","palette":"43","type":"s","spec":"White"},{"code":"R.color.pdlg_color_yellow","color":"#666CAC","name":"yellow","typeName":"","palette":"43","type":"s","spec":"Yellow"},{"code":"%1$s.dismiss();","color":"#666CAC","name":"dimis","typeName":"","palette":"43","type":" ","spec":"%s.inputOnly Dismiss"},{"code":"final\ncom.google.android.material.bottomsheet.BottomSheetDialog %1$s \u003d new com.google.android.material.bottomsheet.BottomSheetDialog(%2$s.this);\n%3$s\n%1$s.setContentView(layBase);\n%1$s.getWindow().findViewById(R.id.design_bottom_sheet).setBackgroundResource(android.R.color.transparent);\n%1$s.show();","color":"#974058","name":"BottomSheet","typeName":"","palette":"44","type":"c","spec":"Create BottomSheet %s.inputOnly to %m.activity"},{"code":"View layBase \u003d getLayoutInflater().inflate(R.layout.%1$s, null);","color":"#974058","name":"layflate","typeName":"","palette":"44","type":" ","spec":"Layout Inflate %s.inputOnly"},{"code":"final LinearLayout %1$s \u003d (LinearLayout)layBase.findViewById(R.id.%2$s);\n\nandroid.graphics.drawable.GradientDrawable bs \u003d new android.graphics.drawable.GradientDrawable();\nbs.setColor(%3$s);\nbs.setCornerRadii(new float[]\n{(int)%4$s,(int)%4$s,(int)%4$s,(int)%4$s,(int)0,(int)0,(int)0,(int)0});\n%1$s.setBackground(bs);","color":"#974058","name":"linvi","typeName":"","palette":"44","type":" ","spec":"Name %s.inputOnly LinearID %s.inputOnly setColor %m.color  setRadius %d "},{"code":"%1$s.dismiss();","color":"#974058","name":"Dismissal","typeName":"","palette":"44","type":" ","spec":"Dismiss %s.inputOnly"},{"code":"%1$s.setOnClickListener(new OnClickListener() { @Override public void onClick (View v) {\n%2$s\n}});","color":"#974058","name":"clck","typeName":"","palette":"44","type":"c","spec":"%s.inputOnly Onclick Listener"},{"code":"WebView %1$s \u003d new WebView(%2$s.this);\nWebSettings webSettings \u003d %1$s.getSettings(); webSettings.setJavaScriptEnabled(true);\n%3$s","color":"#A2A41F","name":"CreateWeb","typeName":"","palette":"45","type":"c","spec":"WebView %s.inputOnly to %m.activity"},{"code":"%1$s.loadUrl(\"%2$s\");","color":"#A2A41F","name":"url","typeName":"","palette":"45","type":" ","spec":"%s.inputOnly URL %s.inputOnly"},{"code":"%1$s.setWebViewClient(new WebViewClient()\n { \n@Override public boolean shouldOverrideUrlLoading(WebView view, String url)\n { \nview.loadUrl(url); \nreturn true;\n } \n%2$s\n});","color":"#A2A41F","name":"Loader","typeName":"","palette":"45","type":"c","spec":"%s.inputOnly WebClient"},{"code":" @Override public void onPageFinished(WebView view, String url) { super.onPageFinished(%1$s, url); \n%2$s\n}","color":"#A2A41F","name":"FinishedNa","typeName":"","palette":"45","type":"c","spec":"%s.inputOnly OnPageFinished "},{"code":"%1$s.goBack();","color":"#A2A41F","name":"back","typeName":"","palette":"45","type":" ","spec":"Go Back %s.inputOnly"},{"code":"%1$s.goForward();","color":"#A2A41F","name":"forwrd","typeName":"","palette":"45","type":" ","spec":"Go Forward %s.inputOnly"},{"code":"LinearLayout %1$s \u003d (LinearLayout) MainActivity.this.findViewById(R.id.%2$s);\n\n%1$s.addView(%3$s);\n\n","color":"#A2A41F","name":"Adm","typeName":"","palette":"45","type":" ","spec":"AddView LinearName %s.inputOnly ID %s.inputOnly to Webview %s.inputOnly"},{"code":"%1$s.getUrl()","color":"#A2A41F","name":"urlm","typeName":"","palette":"45","type":"p","spec":"%s.inputOnly getURL"},{"code":"//This block is arranged and coded by CyberAlpha PH","color":"#7B7B7B","name":"Diamo","typeName":"","palette":"0","type":"h","spec":"IOS Dialog Style"},{"code":"iOSDialogBuilder %1$s \u003d new iOSDialogBuilder(%2$s.this);\n%1$s\n%3$s\n.build().show();","color":"#7B7B7B","name":"IOSDialogv2","typeName":"","palette":"0","type":"c","spec":"IOS Dialog %s.inputOnly to %m.activity "},{"code":".setTitle(%1$s)","color":"#7B7B7B","name":"title","typeName":"","palette":"0","type":" ","spec":"Set Title%s"},{"code":".setSubtitle(%1$s) \t","color":"#7B7B7B","name":"Message","typeName":"","palette":"0","type":" ","spec":"Set Message %s"},{"code":".setBoldPositiveLabel(%1$s)","color":"#7B7B7B","name":"Bold","typeName":"","palette":"0","type":" ","spec":"SetBoldPositive %b"},{"code":"\t.setCancelable(%1$s)","color":"#7B7B7B","name":"Cancelable","typeName":"","palette":"0","type":" ","spec":"Set Cancelable %b"},{"code":".setPositiveListener(%1$s,new iOSDialogClickListener() \n{ \t @Override \t public void onClick(iOSDialog dialog) { \t\t\n%2$s\t \n}\n})\t","color":"#7B7B7B","name":"Positive Listener","typeName":"","palette":"0","type":"c","spec":"Set Positive Listener %s"},{"code":".setNegativeListener(%1$s, new iOSDialogClickListener() \n{ \t \n@Override \t public void onClick(iOSDialog dialog) { \t\t\n%2$s\n}\n})","color":"#7B7B7B","name":"Negative","typeName":"","palette":"0","type":"c","spec":"Set Negative Listener %s"},{"code":"dialog.dismiss(); ","color":"#7B7B7B","name":"Dismiss","typeName":"","palette":"0","type":" ","spec":"Dismiss"},{"code":"PolygonView %1$s \u003d new PolygonView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setStyle(%3$s);\n%1$s.setSide(%4$s);\n%5$s.addView(%1$s);","color":"#FF8000FF","name":"PolygonView","typeName":"","palette":"46","type":" ","spec":"Create PolyView %s.inputOnly at %m.activity Style %d Side %d inflateTo %m.view"},{"code":"PolygonButton %1$s \u003d new PolygonButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setSide(%3$s);\n%4$s.addView(%1$s);","color":"#FF8000FF","name":"PolygonButtonAtPolygonView","typeName":"","palette":"46","type":" ","spec":"Create PolyButton %s.inputOnly at %m.activity Side %d inflateTo %s.inputOnly"},{"code":"PolygonButton %1$s \u003d new PolygonButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setSide(%3$s);\n%4$s.addView(%1$s);","color":"#FF8000FF","name":"PolygonButtonAtView","typeName":"","palette":"46","type":" ","spec":"Create PolyButton %s.inputOnly at %m.activity Side %d inflateTo %m.view"},{"code":"%1$s","color":"#FF8000FF","name":"ViewPolygonView","typeName":"View","palette":"0","type":"v","spec":"%m.PolygonView"},{"code":"%1$s","name":"ViewPolygonButton","typeName":"View","palette":"0","type":"v","spec":"%m.PolygonButton"},{"code":"%1$s.setBorderWidth((float)%2$s);","color":"#FF8000FF","name":"PVsetBorderWidth","typeName":"","palette":"46","type":" ","spec":"%s.inputOnly setBorderWidth %d"},{"code":"%1$s.setBorderColor(%2$s);","color":"#FF8000FF","name":"PVsetBorderColor","typeName":"","palette":"46","type":" ","spec":"%s.inputOnly setBorderColor %m.color"},{"code":"%1$s.setBorderColor(Color.parseColor(%2$s));","name":"PVsetBorderParseColor","palette":"46","type":" ","spec":"%m.view setBorderColor %s"},{"code":"%1$s.setBackground_color(%2$s);\n%1$s.setDark_color(%3$s);\n%1$s.setLight_color(%4$s);","color":"#FF8000FF","name":"ModeColor_int","typeName":"","palette":"46","type":" ","spec":"Neomorphic %s.inputOnly BGcolor %m.color DarkColor %m.color LightColor %m.color"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\n%1$s.setColorFilter(%4$s, PorterDuff.Mode.MULTIPLY);\nint %1$SpaddingDp \u003d (int)%5$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%6$s.addView(%1$s);","name":"SetIcon","palette":"46","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Color %m.color Padding %d addTo %m.view"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\n%1$s.setColorFilter(Color.parseColor(%4$s), PorterDuff.Mode.MULTIPLY);\nint %1$SpaddingDp \u003d (int)%5$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%6$s.addView(%1$s);","name":"SetIconColorParse","palette":"46","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Color %s Padding %d addTo %m.view"},{"code":"%1$s.setStyle(%2$s);","color":"#FF8000FF","name":"SetStyle","typeName":"","palette":"46","type":" ","spec":"Neomorphic %s.inputOnly setStyle %d"},{"code":"CircleView %1$s \u003d new CircleView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setBackgroundColor(%3$s);\n%4$s.addView(%1$s);","color":"#FF8000FF","name":"CircleViewButton","typeName":"","palette":"46","type":" ","spec":"Create CircleButton %s.inputOnly at %m.activity BGcolor %m.color inflateTo %m.view"},{"code":"        ViewGroup viewGroup \u003d %1$s;\n        final ImageView %2$S \u003d (ImageView) viewGroup.getChildAt(0);\n        %1$s.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View v, MotionEvent event) {\n                // is shape Contains Point ----\u003e for detect place of Touch is in the shape or not\n                if (%1$s.isShapeContainsPoint(event.getX(), event.getY())) {\n                    switch (event.getAction()) {\n                        case MotionEvent.ACTION_DOWN:\n                            // PRESSED\n                            //use only \"small inner shadow\" because its same size with \"drop shadow\" style and \"big inner shadow\" is bigger\n                            // \"small inner shadow\" \u003d \"drop shadow\"\n                            // \"big inner shadow\"  \u003e \"drop shadow\"\n                            %1$s.setStyle(neo.small_inner_shadow);\n                            %2$S.setScaleX(%2$S.getScaleX() * 0.9f);\n                            %2$S.setScaleY(%2$S.getScaleY() * 0.9f);\n                            %3$s\n                            return true; // if you want to handle the touch event\n                        case MotionEvent.ACTION_UP:\n                        case MotionEvent.ACTION_CANCEL:\n                            // RELEASED\n                            %1$s.setStyle(neo.drop_shadow);\n                            %2$S.setScaleX(1);\n                            %2$S.setScaleY(1);\n                            return true; // if you want to handle the touch event\n                    }\n                }\n                return false;\n            }\n        });","color":"#FF8000FF","name":"CircleViewOnTouch","typeName":"View","palette":"46","type":"c","spec":"%s.inputOnly with Icon ID %s.inputOnly onTouchListener"},{"code":"%1$s","name":"ViewCircleView","typeName":"View","palette":"0","type":"v","spec":"%m.CircleView"},{"code":"neoText %1$s \u003d new neoText(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.WRAP_CONTENT));\n%1$s.setStyle(%3$s);\n%5$s\n%4$s.addView(%1$s);","color":"#FF8000FF","name":"NeoTextView","typeName":"","palette":"46","type":"c","spec":"NeoText %s.inputOnly at %m.activity Style %d To %m.view"},{"code":"TextView %1$s \u003d new TextView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setTextColor(%3$s);\n%1$s.setTextSize(TypedValue.COMPLEX_UNIT_DIP, %4$s);\n%5$s.addView(%1$s);","color":"#FF8000FF","name":"TextOnNeo","typeName":"","palette":"46","type":" ","spec":"AddText on Neo ID %s.inputOnly at %m.activity Color %m.color Size %d inflateTo %s.inputOnly"},{"code":"%1$s","name":"ViewNeoText","typeName":"View","palette":"0","type":"v","spec":"%m.neoText"},{"code":"%1$s.setText(%2$s);","color":"#FF8000FF","name":"TextOnNeoSetText","typeName":"View","palette":"46","type":" ","spec":"Textview Text %s.inputOnly setText %s"},{"code":"%1$s.setShadow_radius((float)%2$s);\n%1$s.setShadow_position_x((float)%3$s);\n%1$s.setShadow_position_y((float)%3$s);","color":"#FF8000FF","name":"ShadowRadius","typeName":"","palette":"46","type":" ","spec":"%s.inputOnly setShadowRadius %d PositionXY %d"},{"code":"%1$s.setShadow_position_x((float)%2$s);","color":"#FF8000FF","name":"ShadowPositionX","typeName":"","palette":"0","type":" ","spec":"%s.inputOnly setShadowPositionX %d"},{"code":"%1$s.setShadow_position_y((float)%2$s);","color":"#FF8000FF","name":"ShadowPositionY","typeName":"","palette":"0","type":" ","spec":"%s.inputOnly setShadowPositionY %d"},{"code":"RectButton %1$s \u003d new RectButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%3$s.addView(%1$s);","color":"#FF8000FF","name":"RectButton","typeName":"","palette":"46","type":" ","spec":"Create RectButton %s.inputOnly at %m.activity inflateTo %m.view"},{"code":"%1$s.setTopLeftRadius((float)%2$s);","color":"#FF8000FF","name":"RectSetTopLeftRadius","typeName":"","palette":"46","type":" ","spec":"RectButton %s.inputOnly setTopLeftRadius %d"},{"code":"%1$s.setTopRightRadius((float)%2$s);","color":"#FF8000FF","name":"RectSetTopRightRadius","typeName":"","palette":"46","type":" ","spec":"RectButton %s.inputOnly setTopRightRadius %d"},{"code":"%1$s.setBottomRightRadius((float)%2$s);","color":"#FF8000FF","name":"RectSetBottomRightRadius","typeName":"","palette":"46","type":" ","spec":"RectButton %s.inputOnly setBottomRightRadius %d"},{"code":"%1$s.setBottomLeftRadius((float)%2$s);","color":"#FF8000FF","name":"RectSetBottomLeftRadius","typeName":"","palette":"46","type":" ","spec":"RectButton %s.inputOnly setBottomLeftRadius %d"},{"code":"%1$s","name":"ViewRectButton","typeName":"View","palette":"0","type":"v","spec":"%m.RectButton"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\nint %1$SpaddingDp \u003d (int) %4$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%5$s.addView(%1$s);","name":"SetIconNoColor","palette":"46","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Padding %d addTo %m.view"},{"code":"%1$s.setPadding(%2$s, %2$s, %2$s, %2$s);","color":"#FF8000FF","name":"padmo","typeName":"","palette":"46","type":" ","spec":"%s.inputOnly setPadding %d"},{"code":"getApplicationInfo().loadLabel(getPackageManager()).toString()","color":"#2E3F90","name":"antiAppName Remod","typeName":"","palette":"36","type":"s","spec":"Anti AppName Remod by CAPH"},{"code":"new %1$s().getClass().getPackage().getName().toString()","color":"#2E3F90","name":"AntiPackage Remod","typeName":"","palette":"36","type":"s","spec":"%m.activity AntiPackage Remod"},{"code":"{\n        Random random \u003d new Random(System.currentTimeMillis());\n        byte[] bytes \u003d str.getBytes();\n        int length \u003d bytes.length;\n        StringBuilder append \u003d new StringBuilder().append(\"(new Object() {\").append(\"\\n   int t;\").append(\"\\n   public String toString() {\").append(\"\\n      byte[] buf \u003d new byte[\").append(length).append(\"];\");\n        for (int i \u003d 0; i \u003c length; i++) {\n            int nextInt \u003d random.nextInt(24) + 1;\n            append \u003d append.append(\"\\n      t \u003d \").append((random.nextInt() \u0026 ((255 \u003c\u003c nextInt) ^ -1)) | (bytes[i] \u003c\u003c nextInt)).append(\";\").append(\"\\n      buf[\").append(i).append(\"] \u003d (byte) (t \u003e\u003e\u003e \").append(nextInt).append(\");\");\n        }\n        MainActivity.this.result \u003d append.append(\"\\n      return new String(buf);\").append(\"\\n   }\\n}.toString())\").toString();     \n    }","color":"#3F87FF","name":"bytekagat","typeName":"","palette":"21","type":" ","spec":"String to Byte Converter"},{"code":"SliderLayout %1$s \u003d new SliderLayout(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%3$s.addView(%1$s);","color":"#FF00BFFF","name":"GlideSlider","typeName":"","palette":"48","type":" ","spec":"GlideSlider %m.SliderLayout at %m.activity inflateTo %m.view"},{"code":"\t\tcom.bumptech.glide.request.RequestOptions requestOptions \u003d new com.bumptech.glide.request.RequestOptions();\n\t\trequestOptions.%1$s();","color":"#FF00BFFF","name":"RequestOptionsType","typeName":"","palette":"48","type":" ","spec":"Glide RequestOptions %m.RequestOptionsType"},{"code":"requestOptions","color":"#FF00BFFF","name":"requestOptions","typeName":"RequestOptions","palette":"48","type":"v","spec":"requestOptions"},{"code":"centerCrop","color":"#FF00BFFF","name":"centerCrop","typeName":"RequestOptionsType","palette":"48","type":"v","spec":"centerCrop"},{"code":"centerInside","name":"centerInside","typeName":"RequestOptionsType","palette":"48","type":"v","spec":"centerInside"},{"code":"circleCrop","name":"circleCrop","typeName":"RequestOptionsType","palette":"48","type":"v","spec":"circleCrop"},{"code":"fitCenter","name":"fitCenter","typeName":"RequestOptionsType","palette":"48","type":"v","spec":"fitCenter"},{"code":"\t\t\tcom.glide.slider.library.slidertypes.TextSliderView sliderView \u003d new com.glide.slider.library.slidertypes.TextSliderView(this);","color":"#FF00BFFF","name":"TextSliderView","typeName":"","palette":"48","type":" ","spec":"TextSliderView CreateWidget "},{"code":"sliderView","color":"#FF00BFFF","name":"sliderView","typeName":"TextSliderView","palette":"48","type":"v","spec":"sliderView"},{"code":"\t\t\t%1$s\n\t\t\t.image(%2$s)\n\t\t\t.description(%3$s)\n\t\t\t.setRequestOption(%4$s)\n\t\t\t.setProgressBarVisible(%5$s)\n\t\t\t.setOnSliderClickListener(new com.glide.slider.library.slidertypes.BaseSliderView.OnSliderClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onSliderClick(com.glide.slider.library.slidertypes.BaseSliderView slider) {\n\t\t\t\t    %6$s\n\t\t\t\t}\n\t\t\t});","color":"#FF00BFFF","name":"ConfigTextSliderView","typeName":"","palette":"48","type":"c","spec":"%m.TextSliderView setImage %s setDescription %s setRequestOptions %m.RequestOptions setProgressBar %b OnClick"},{"code":"%1$s.bundle(new Bundle());","color":"#FF00BFFF","name":"CreateBundle","typeName":"","palette":"48","type":" ","spec":"%m.TextSliderView new Bundle"},{"code":"%1$s.getBundle().putString(%2$s, %3$s);","color":"#FF00BFFF","name":"GetBundleData","typeName":"","palette":"48","type":" ","spec":"%m.TextSliderView putStringKey %s value %s"},{"code":"%1$s.addSlider(%2$s);","color":"#FF00BFFF","name":"SliderLayoutAddSliderView","typeName":"","palette":"48","type":" ","spec":"%m.SliderLayout addView %m.TextSliderView"},{"code":"\t\t%1$s.setPresetTransformer(SliderLayout.Transformer.Accordion);\n\t\t%1$s.setPresetIndicator(SliderLayout.PresetIndicators.Center_Top);\n\t\t%1$s.setCustomAnimation(new com.glide.slider.library.animations.DescriptionAnimation());\n\t\t%1$s.setDuration(%2$s);        \n\t\t%1$s.stopCyclingWhenTouch(%3$s);","color":"#FF00BFFF","name":"SliderConfigExtra","typeName":"RequestOptionsType","palette":"48","type":" ","spec":"%m.SliderLayout setDuration %d stopCyclingWhenTouch %b"},{"code":"\t\tfor (int position \u003d 0; position \u003c %1$s.size(); position++) {\n\t\t\t%2$s\n\t\t}","color":"#FF00BFFF","name":"CreateListDataSlider","typeName":"","palette":"48","type":"c","spec":"Slider CreatDataFrom List %m.listStr"},{"code":"position","name":"position","palette":"48","type":"d","spec":"position"},{"code":"slider.getBundle().getString(%1$s) + \"\"","color":"#FF00BFFF","name":"SliderGetString","typeName":"String","palette":"48","type":"v","spec":"Slider getString Key %s"},{"code":"try {\n\r%s\n} catch(Exception e) {\n\r%s\n}","color":"#E00300","name":"rsa try catch","typeName":"","palette":"27","type":"e","spec":"%m.varMaptry"},{"code":"%1$s.setText(RSAEncrypt(%2$s.getText().toString()).toString());","color":"#E00300","name":"rsa encrypt","typeName":"","palette":"27","type":" ","spec":"Encrypt RSA %m.textview  %m.edittext"},{"code":"%1$s.setText(RSADecrypt(encryptedBytes));","color":"#E00300","name":"rsa decrypt","typeName":"","palette":"27","type":" ","spec":"Decrypt RSA %m.textview"},{"code":"}\n\njava.security.KeyPairGenerator kpg;\njava.security.KeyPair kp;\njava.security.PublicKey publicKey;\njava.security.PrivateKey privateKey;\nbyte [] encryptedBytes,decryptedBytes;\njavax.crypto.Cipher cipher,cipher1;\nString encrypted,decrypted;\n\npublic byte[] RSAEncrypt(final String plain) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException {\nkpg \u003d java.security.KeyPairGenerator.getInstance(\"RSA\");\nkpg.initialize(2048);\nkp \u003d kpg.genKeyPair();\npublicKey \u003d kp.getPublic();\nprivateKey \u003d kp.getPrivate();\ncipher \u003d javax.crypto.Cipher.getInstance(\"RSA\");\ncipher.init(javax.crypto.Cipher.ENCRYPT_MODE, publicKey);\nencryptedBytes \u003d cipher.doFinal(plain.getBytes());\nSystem.out.println(\"EEncrypted?????\" + new String(org.apache.commons.codec.binary.Hex.encodeHex(encryptedBytes)));\nreturn encryptedBytes;\n}\n\npublic String RSADecrypt(final byte[] encryptedBytes) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException{\ncipher1 \u003d javax.crypto.Cipher.getInstance(\"RSA\");\ncipher1.init(javax.crypto.Cipher.DECRYPT_MODE, privateKey);\ndecryptedBytes \u003d cipher1.doFinal(encryptedBytes);\ndecrypted \u003d new String(decryptedBytes);\nSystem.out.println(\"DDecrypted?????\" + decrypted);\nreturn decrypted;\n","color":"#E00300","name":"rsa lib","typeName":"","palette":"27","type":" ","spec":"RSA function lib"},{"code":"Context context \u003d getApplicationContext();\nCharSequence text \u003d %1$s;\nint duration \u003d Toast.LENGTH_LONG;\n\nToast %2$s \u003d Toast.makeText(context, text, duration);\n%2$s.show();","color":"#E00300","name":"rsa toast","typeName":"","palette":"27","type":" ","spec":"Toast %s w/o duplicate %s.inputOnly"},{"code":"e.toString()","color":"#E00300","name":"rsa getException","typeName":"","palette":"27","type":"s","spec":"getException"},{"code":"SweetAlertDialog %1$s \u003d new SweetAlertDialog(%2$s.this %3$s);\n%4$s\n%1$s.show();","color":"#BDAD43","name":"SweetAlert","typeName":"","palette":"49","type":"c","spec":"%s.inputOnly SweetAlert Dialog to %m.activity withType %s"},{"code":", SweetAlertDialog.ERROR_TYPE","color":"#BDAD43","name":"type","typeName":"","palette":"49","type":"s","spec":"Error Type"},{"code":", SweetAlertDialog.WARNING_TYPE","color":"#BDAD43","name":"warning","typeName":"","palette":"49","type":"s","spec":"Warning Type"},{"code":", SweetAlertDialog.SUCCESS_TYPE","color":"#BDAD43","name":"sucess","typeName":"","palette":"49","type":"s","spec":"Success Type"},{"code":", SweetAlertDialog.CUSTOM_IMAGE_TYPE","color":"#BDAD43","name":"customimg","typeName":"","palette":"49","type":"s","spec":"CustomImage Type"},{"code":", SweetAlertDialog.PROGRESS_TYPE","color":"#BDAD43","name":"progtype","typeName":"","palette":"49","type":"s","spec":"Progress Type"},{"code":"%1$s.setTitleText(%2$s);","color":"#BDAD43","name":"sweettitle","typeName":"","palette":"49","type":" ","spec":"%s.inputOnly Set Title %s"},{"code":"%1$s.setContentText(%2$s);","color":"#BDAD43","name":"sweetmessafe","typeName":"","palette":"49","type":" ","spec":"%s.inputOnly Set Message %s"},{"code":"%1$s.setCustomImage(R.drawable.%2$s);","color":"#BDAD43","name":"cusim","typeName":"","palette":"49","type":" ","spec":"%s.inputOnly SetCustom Image %m.resource"},{"code":"%1$s.setConfirmText(\"%2$s\");\n%1$s.setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() { \n@Override public void onClick(SweetAlertDialog sDialog) { \n%3$s\n } \n});","color":"#BDAD43","name":"confirmbut","typeName":"","palette":"49","type":"c","spec":"%s.inputOnly SetConfirm Button Text %s.inputOnly"},{"code":"sDialog.dismissWithAnimation();","color":"#BDAD43","name":"sweetdismiss","typeName":"","palette":"49","type":" ","spec":"Dismiss with Anim"},{"code":"sDialog.dismiss();","color":"#BDAD43","name":"sweetdismissal","typeName":"","palette":"49","type":" ","spec":"Dismiss"},{"code":"%1$s.setCancelText(\"%2$s\");%1$s.showCancelButton(true);\n%1$s.setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() { \n@Override public void onClick(SweetAlertDialog sDialog) \n{ sDialog.dismiss();\n} });","color":"#BDAD43","name":"sweetcancel","typeName":"","palette":"49","type":" ","spec":"%s.inputOnly Set Cancel Button %s.inputOnly"},{"code":"sDialog \n.setTitleText(\"%1$s\") \n.setContentText(\"%2$s\") \n.setConfirmText(\"OK\") \n.setConfirmClickListener(null) \n.setCancelText(\"%1$s\").showCancelButton(false)\n.changeAlertType(SweetAlertDialog.SUCCESS_TYPE);","color":"#BDAD43","name":"changecontent","typeName":"","palette":"49","type":" ","spec":"CyangeType Title %s.inputOnly Message %s.inputOnly"},{"code":"%1$s.getProgressHelper().setBarColor(%2$s);","color":"#BDAD43","name":"proghelper","typeName":"","palette":"49","type":" ","spec":"%s.inputOnly SetProgressHelper %m.color"},{"code":"/*tasty*/","color":"#D09260","name":"CyberAlpha Toast","typeName":"","palette":"50","type":"h","spec":"Tasty Toast"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.SUCCESS);","color":"#D09260","name":"suctoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make SuccessToast  %s"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.WARNING);","color":"#D09260","name":"warntoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make WarningToast  %s"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.ERROR);","color":"#D09260","name":"errtoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make ErrorToast  %s"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.INFO);","color":"#D09260","name":"inftoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make InfoToast  %s"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.DEFAULT);","color":"#D09260","name":"deftoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make DefaultToast  %s"},{"code":"TastyToast.makeText(%1$s.this, %2$s, TastyToast.LENGTH_LONG, TastyToast.CONFUSING);","color":"#D09260","name":"conftoast","typeName":"","palette":"50","type":" ","spec":"%m.activity Make ConfusingToast  %s"},{"code":"final CustomAlertDialog %2$s \u003d new CustomAlertDialog(%1$s.this, CustomAlertDialog.%3$s);\n%4$s\n%2$s.setCancelable(false);\n%2$s.create(); \n%2$s.show();","color":"#B65DA0","name":"StyleDiag","typeName":"","palette":"51","type":"c","spec":"%m.activity Style Dialog %s.inputOnly with Style %s"},{"code":"DialogStyle.CURVE","color":"#B65DA0","name":"stylecurve","typeName":"","palette":"51","type":"s","spec":"Curve Style"},{"code":"DialogStyle.DEFAULT","color":"#B65DA0","name":"styledefault","typeName":"","palette":"51","type":"s","spec":"Default Style"},{"code":"%1$s.setDialogType(%2$s);","color":"#B65DA0","name":"DiagType","typeName":"","palette":"51","type":" ","spec":"%s.inputOnly DialogType %s"},{"code":"CustomAlertDialog.DialogType.SUCCESS","color":"#B65DA0","name":"successtype","typeName":"","palette":"51","type":"s","spec":"SUCCESS"},{"code":"CustomAlertDialog.DialogType.ERROR","color":"#B65DA0","name":"errortype","typeName":"","palette":"51","type":"s","spec":"ERROR"},{"code":"CustomAlertDialog.DialogType.WARNING","color":"#B65DA0","name":"warningtype","typeName":"","palette":"51","type":"s","spec":"WARNING"},{"code":"CustomAlertDialog.DialogType.INFO","color":"#B65DA0","name":"infotype","typeName":"","palette":"51","type":"s","spec":"INFO"},{"code":"CustomAlertDialog.DialogType.DEFAULT","color":"#B65DA0","name":"defatype","typeName":"","palette":"51","type":"s","spec":"DEFAULT"},{"code":"%1$s.setAlertTitle(%2$s); %1$s.setAlertMessage(%3$s);","color":"#B65DA0","name":"titlemess","typeName":"","palette":"51","type":" ","spec":"%s.inputOnly Set Title %s Set Message %s"},{"code":"%1$s.setPositiveButton(%2$s, new View.OnClickListener()\n { \n@Override public void onClick(View v) { \n%3$s\n%1$s.dismiss();\n } }); ","color":"#B65DA0","name":"postm","typeName":"","palette":"51","type":"c","spec":"%s.inputOnly Positive Button %s"},{"code":"%1$s.setNegativeButton(%2$s, new View.OnClickListener()\n { \n@Override public void onClick(View v) { \n%3$s\n%1$s.dismiss();\n } }); ","color":"#B65DA0","name":"negam","typeName":"","palette":"51","type":"c","spec":"%s.inputOnly Negative Button %s"},{"code":"String MyAndroidID \u003d android.provider.Settings.Secure.getString(MainActivity.this.getContentResolver(), android.provider.Settings.Secure.ANDROID_ID).concat(%1$s.getText().toString());\n\nif (%1$s.getText().toString().equals(\"\")) {\t\t\t\n%3$s\r\n\t\t}\r\n\t\telse {\t\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%2$s.setText(MyDeviceID);\t\t\n%4$s\r\n\t\t}\n\n\n\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"md55","typeName":"","palette":"47","type":"e","spec":"MD5 from %m.edittext to %m.textview"},{"code":"String MyAndroidID \u003d %1$s.getText().toString();\n\nif (%1$s.getText().toString().equals(\"\")) {\t\t\t\n%3$s\r\n\t\t}\r\n\t\telse {\t\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%2$s.setText(MyDeviceID);\t\t\n%4$s\r\n\t\t}\n\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"md55pr","typeName":"","palette":"47","type":"e","spec":"MD5 Premium from %m.edittext to %m.textview"},{"code":"String MyAppPackage \u003d new %1$s().getClass().getPackage().getName().toString();\n\nString MyPackage \u003d md5(MyAppPackage).toUpperCase();\n%2$s\n","color":"#FF0000FF","name":"md55lib","typeName":"","palette":"47","type":"c","spec":"MD5 Pro from %m.activity"},{"code":"String MyAndroidID \u003d getApplicationInfo().loadLabel(getPackageManager()).toString();\n\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%1$s","color":"#FF0000FF","name":"md55libb","typeName":"","palette":"47","type":"c","spec":"MD5 Pro App from"},{"code":"String MyAndroidID \u003d getApplicationInfo().loadLabel(getPackageManager()).toString();\n\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%1$s","color":"#FF0000FF","name":"md5input","typeName":"","palette":"47","type":"c","spec":"MD5 Pro Input"},{"code":"MyDeviceID","color":"#FF0000FF","name":"blh","typeName":"","palette":"47","type":"s","spec":"MD5 ID"},{"code":"MyPackage","color":"#FF0000FF","name":"appp","typeName":"","palette":"47","type":"s","spec":"MD5 App Package"},{"code":"final KonfettiView konfettiView \u003d findViewById(R.id.%1$s);\n konfettiView.setOnClickListener(new View.OnClickListener() { \n@Override public void onClick(final View view) { \nkonfettiView.build() \n.addColors(%2$s, %3$s, %4$s, %5$s, %6$s) \n.setDirection(0.0, 359.0) \n.setSpeed(1f, 5f) \n.setFadeOutEnabled(true) .setTimeToLive(2000L) \n.addShapes(nl.dionsegijn.konfetti.models.Shape.Square.INSTANCE, nl.dionsegijn.konfetti.models.Shape.Circle.INSTANCE)\n .addSizes(new nl.dionsegijn.konfetti.models.Size(12, 5f)) \n.setPosition(-50f, konfettiView.getWidth() + 50f, -50f, -50f) .streamFor(300, 5000L); \n} \n});","color":"#3F87FF","name":"konf","typeName":"","palette":"21","type":" ","spec":"KonfettiView ID %s.inputOnly with Color %m.color , %m.color , %m.color , %m.color , %m.color"},{"code":"SnowFlakesLayout %1$s; \n%1$s\u003d (SnowFlakesLayout) %2$s.this.findViewById(R.id.%3$s); \n%1$s.init();\n%1$s.setEnableRandomCurving(true);\n%1$s.setRandomSnowSizeRange(50, 10);\n%1$s.setGenerateSnowTiming(100);\n%1$s.setEnableAlphaFade(true);\n%4$s\n%1$s.startSnowing();","color":"#9E977C","name":"snowy","typeName":"","palette":"52","type":"c","spec":"Snow name %s.inputOnly to %m.activity SnowID %s.inputOnly"},{"code":"SnowFlakesLayout %1$s; \n%1$s\u003d (SnowFlakesLayout) %2$s.this.findViewById(R.id.%3$s); \n%1$s.init();\n%1$s.stopSnowing();","color":"#9E977C","name":"Stop Snow","typeName":"","palette":"52","type":" ","spec":"Stop Snow %s.inputOnly to %m.activity ID %s.inputOnly"},{"code":"%1$s.setImageResourceID(R.drawable.%2$s);","color":"#9E977C","name":"customsnow","typeName":"","palette":"52","type":" ","spec":"%s.inputOnly CustomImage %m.resource"},{"code":"\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"mdhash","typeName":"","palette":"47","type":" ","spec":"MD Lib"},{"code":"String MyAndroidID \u003d android.provider.Settings.Secure.getString(MainActivity.this.getContentResolver(), android.provider.Settings.Secure.ANDROID_ID).concat(%1$s.getText().toString());\n\nif (%1$s.getText().toString().equals(\"\")) {\t\t\t\n%3$s\r\n\t\t}\r\n\t\telse {\t\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%2$s.setText(MyDeviceID);\t\t\n%4$s\r\n\t\t}\n\n\n\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"md55","typeName":"","palette":"53","type":"e","spec":"MD5 from %m.edittext to %m.textview"},{"code":"String MyAndroidID \u003d %1$s.getText().toString();\n\nif (%1$s.getText().toString().equals(\"\")) {\t\t\t\n%3$s\r\n\t\t}\r\n\t\telse {\t\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%2$s.setText(MyDeviceID);\t\t\n%4$s\r\n\t\t}\n\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"md55pr","typeName":"","palette":"53","type":"e","spec":"MD5 Premium from %m.edittext to %m.textview"},{"code":"String MyAppPackage \u003d new %1$s().getClass().getPackage().getName().toString();\n\nString MyPackage \u003d md5(MyAppPackage).toUpperCase();\n%2$s\n","color":"#FF0000FF","name":"md55lib","typeName":"","palette":"53","type":"c","spec":"MD5 Pro from %m.activity"},{"code":"String MyAndroidID \u003d getApplicationInfo().loadLabel(getPackageManager()).toString();\n\nString MyDeviceID \u003d md5(MyAndroidID).toUpperCase();\n%1$s","color":"#FF0000FF","name":"md55libb","typeName":"","palette":"53","type":"c","spec":"MD5 Pro App from"},{"code":"MyDeviceID","color":"#FF0000FF","name":"blh","typeName":"","palette":"53","type":"s","spec":"MD5 ID"},{"code":"MyPackage","color":"#FF0000FF","name":"appp","typeName":"","palette":"53","type":"s","spec":"MD5 App Package"},{"code":"\n}\npublic String md5(String md5) {\ntry { java.security.MessageDigest md \u003d java.security.MessageDigest.getInstance(\"md5\");\nbyte[] array \u003d md.digest(md5.getBytes(\"UTF-8\"));\nStringBuffer sb \u003d new StringBuffer(); for (int i \u003d 0; i \u003c array.length; ++i) {\nsb.append(Integer.toHexString((array[i] \u0026 0xFF) | 0x100).substring(1,3));\n} return sb.toString();\n} catch (java.security.NoSuchAlgorithmException e)\n{\n}catch(java.io.UnsupportedEncodingException ex)\n{\n} return null;\n}\n{\n","color":"#FF0000FF","name":"mdhash","typeName":"","palette":"53","type":" ","spec":"MD Lib"},{"code":"Window w \u003d this.getWindow();w.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);w.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); w.setStatusBarColor(Color.parseColor(\"#00000000\"));\n\nw.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS); ","color":"#3F87FF","name":"TranspaStatNavi","typeName":"","palette":"21","type":" ","spec":"Transparent Statusbar and Navigationbar"},{"code":" \r\n\tFileUtil.makeDir(FileUtil.getExternalStorageDir() + \"/App_Backup\");\n     String  AppDir \u003d FileUtil.getExternalStorageDir().concat(\"/App_Backup\");\n        try {\n            android.content.pm.PackageInfo packageInfo \u003d getPackageManager().getPackageInfo(new %1$s().getClass().getPackage().getName().toString(), 1);\n          String  app \u003d packageInfo.applicationInfo.publicSourceDir;\n           String ver \u003d packageInfo.versionName;\n         String  finalPath \u003d AppDir.concat(\"/\".concat(getApplicationInfo().loadLabel(getPackageManager()).toString().concat(\" v\".concat(ver.concat(\".apk\")))));\n            FileUtil.copyFile(app, finalPath );\n%2$s\n        } catch (Exception e) {\n            SketchwareUtil.showMessage(getApplicationContext(), e.toString());\n        }","color":"#3F87FF","name":"Extract Apk","typeName":"","palette":"21","type":"c","spec":"Apk Extractor %m.activity "},{"code":"final GnarlyDialog myGnarlyDialog \u003d new GnarlyDialog(%1$s.this %2$s);\n%3$s\nmyGnarlyDialog.gnarlyDialogShow();","color":"#D2C517","name":"GnarlyDiag","typeName":"","palette":"54","type":"c","spec":"GnarlyDialog Create To %m.activity withType %s"},{"code":"myGnarlyDialog.setGnarlyTitleText(%1$s);","color":"#D2C517","name":"Titlel","typeName":"","palette":"54","type":" ","spec":"setTitle %s"},{"code":"myGnarlyDialog.setGnarlyContentText(%1$s);","color":"#D2C517","name":"ContextTextt","typeName":"","palette":"54","type":" ","spec":"setContextText %s"},{"code":"myGnarlyDialog.setGnarlyPrimaryButtonText(%1$s);","color":"#D2C517","name":"PrimaryButtonText","typeName":"","palette":"54","type":" ","spec":"setPrimaryButtonText %s"},{"code":"myGnarlyDialog.setGnarlyPrimaryButtonListener(new View.OnClickListener() {\n@Override\npublic void onClick(View v) {\n%1$s\n} });","color":"#D2C517","name":"Primary Buttonn","typeName":"","palette":"54","type":"c","spec":"Primary Listener "},{"code":"myGnarlyDialog.setGnarlySecondaryButtonText(%1$s);","color":"#D2C517","name":"SecondaryButtonTextt","typeName":"","palette":"54","type":" ","spec":"setSecondaryButtonText %s"},{"code":"myGnarlyDialog.setGnarlySecondaryButtonListener(new View.OnClickListener() {\n@Override\npublic void onClick(View v) {\n} });","color":"#D2C517","name":"Secondary Buttonn","typeName":"","palette":"54","type":"c","spec":"Secondary Button"},{"code":"myGnarlyDialog.gnarlyDialogDismiss();","color":"#D2C517","name":"Dismisss","typeName":"","palette":"54","type":" ","spec":"Dismiss"},{"code":"myGnarlyDialog.setGnarlyShouldDismisOnOutsideTouch(%1$s);","color":"#D2C517","name":"Cancelabled","typeName":"","palette":"54","type":" ","spec":"setCancelable %b"},{"code":", GnarlyDialog.GNARLY_DIALOG_TYPE_SUCCESS","color":"#D2C517","name":"TYPE1","typeName":"","palette":"54","type":"s","spec":"SUCCESS"},{"code":", GnarlyDialog.GNARLY_DIALOG_TYPE_ERROR","color":"#D2C517","name":"TYPE2","typeName":"","palette":"54","type":"s","spec":"ERROR"},{"code":", GnarlyDialog.GNARLY_DIALOG_TYPE_INFO","color":"#D2C517","name":"TYPE3","typeName":"","palette":"54","type":"s","spec":"INFO"},{"code":", GnarlyDialog.GNARLY_DIALOG_TYPE_WARNING","color":"#D2C517","name":"TYPE4","typeName":"","palette":"54","type":"s","spec":"WARNING"},{"code":", GnarlyDialog.GNARLY_DIALOG_TYPE_DEFAULT","color":"#D2C517","name":"TYPE5","typeName":"","palette":"54","type":"s","spec":"DEFAULT"},{"code":"//copyright holder","color":"#FF004D40","name":"This blocks is Made by Arkanghel \u0026 Cyber Alpha","typeName":"","palette":"55","type":"h","spec":"This blocks is Made by Arkanghel \u0026 Cyber Alpha"},{"code":"startActivity(new Intent(%1$s.this, %2$s.class)); %3$s(%1$s.this);","color":"#FF004D40","name":"Animatoo : )","typeName":"","palette":"55","type":" ","spec":"Animatoo Transition \u003e\u003e  Main%m.activity Target %m.activity  Style %s "},{"code":"//animatonstyles","color":"#FF004D40","name":"stype animato","typeName":"","palette":"55","type":"h","spec":"Animatoo Styles "},{"code":"Animatoo.animateZoom","color":"#FF004D40","name":"zoom animatoo","typeName":"","palette":"55","type":"s","spec":"Zoom"},{"code":"Animatoo.animateFade","color":"#FF004D40","name":"animato faded","typeName":"","palette":"55","type":"s","spec":"Fade"},{"code":"Animatoo.animateWindmill","color":"#FF004D40","name":"animato windmill","typeName":"","palette":"55","type":"s","spec":"Windmill"},{"code":"Animatoo.animateSpin","color":"#FF004D40","name":"animato spin","typeName":"","palette":"55","type":"s","spec":"Spin"},{"code":"Animatoo.animateDiagonal","color":"#FF004D40","name":"Diagonal animatoo","typeName":"","palette":"55","type":"s","spec":"Diagonal"},{"code":"Animatoo.animateSplit","color":"#FF004D40","name":"animto split","typeName":"","palette":"55","type":"s","spec":"Split"},{"code":"Animatoo.animateShrink","color":"#FF004D40","name":"shrink animato","typeName":"","palette":"55","type":"s","spec":"Shrink"},{"code":"Animatoo.animateCard","color":"#FF004D40","name":"animat card","typeName":"","palette":"55","type":"s","spec":"Card"},{"code":"Animatoo.animateInAndOut","color":"#FF004D40","name":"in out animato","typeName":"","palette":"55","type":"s","spec":"In And Out"},{"code":"Animatoo.animateSwipeLeft","color":"#FF004D40","name":"animato swipe left","typeName":"","palette":"55","type":"s","spec":"Swipe Left"},{"code":"Animatoo.animateSwipeRight","color":"#FF004D40","name":"swipe right animato","typeName":"","palette":"55","type":"s","spec":"Swipe Right"},{"code":"Animatoo.animateSlideLeft","color":"#FF004D40","name":"slide Left animato","typeName":"","palette":"55","type":"s","spec":"Slide Left"},{"code":"Animatoo.animateSlideRight","color":"#FF004D40","name":"right animato slide","typeName":"","palette":"55","type":"s","spec":"Slide Right"},{"code":"Animatoo.animateSlideDown","color":"#FF004D40","name":"Animatoo Slide Down","typeName":"","palette":"55","type":"s","spec":"Slide Down"},{"code":"Animatoo.animateSlideUp","color":"#FF004D40","name":"Animatoo Slide Up","typeName":"","palette":"55","type":"s","spec":"Slide Up"},{"code":"position","color":"#C1BA00","name":"poooo","typeName":"","palette":"28","type":"d","spec":"position"},{"code":"%1$s \u003d new SliderLayout(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%3$s.addView(%1$s);","name":"GlideSlider","palette":"56","type":" ","spec":"GlideSlider %m.SliderLayout at %m.activity inflateTo %m.view"},{"code":"\t\tcom.bumptech.glide.request.RequestOptions requestOptions \u003d new com.bumptech.glide.request.RequestOptions();\n\t\trequestOptions.%1$s();","name":"RequestOptionsType","palette":"56","type":" ","spec":"Glide RequestOptions %m.RequestOptionsType"},{"code":"requestOptions","name":"requestOptions","typeName":"RequestOptions","palette":"56","type":"v","spec":"requestOptions"},{"code":"centerCrop","name":"centerCrop","typeName":"RequestOptionsType","palette":"56","type":"v","spec":"centerCrop"},{"code":"centerInside","name":"centerInside","typeName":"RequestOptionsType","palette":"56","type":"v","spec":"centerInside"},{"code":"circleCrop","name":"circleCrop","typeName":"RequestOptionsType","palette":"56","type":"v","spec":"circleCrop"},{"code":"fitCenter","name":"fitCenter","typeName":"RequestOptionsType","palette":"56","type":"v","spec":"fitCenter"},{"code":"\t\t\tcom.glide.slider.library.slidertypes.TextSliderView sliderView \u003d new com.glide.slider.library.slidertypes.TextSliderView(this);","name":"TextSliderView","palette":"56","type":" ","spec":"TextSliderView CreateWidget "},{"code":"sliderView","name":"sliderView","typeName":"TextSliderView","palette":"56","type":"v","spec":"sliderView"},{"code":"\t\t\t%1$s\n\t\t\t.image(%2$s)\n\t\t\t.description(%3$s)\n\t\t\t.setRequestOption(%4$s)\n\t\t\t.setProgressBarVisible(%5$s)\n\t\t\t.setOnSliderClickListener(new com.glide.slider.library.slidertypes.BaseSliderView.OnSliderClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onSliderClick(com.glide.slider.library.slidertypes.BaseSliderView slider) {\n\t\t\t\t    %6$s\n\t\t\t\t}\n\t\t\t});","name":"ConfigTextSliderView","palette":"56","type":"c","spec":"%m.TextSliderView setImage %s setDescription %s setRequestOptions %m.RequestOptions setProgressBar %b OnClick"},{"code":"%1$s.bundle(new Bundle());","name":"CreateBundle","palette":"56","type":" ","spec":"%m.TextSliderView new Bundle"},{"code":"%1$s.getBundle().putString(%2$s, %3$s);","name":"GetBundleData","palette":"56","type":" ","spec":"%m.TextSliderView putStringKey %s value %s"},{"code":"%1$s.addSlider(%2$s);","name":"SliderLayoutAddSliderView","palette":"56","type":" ","spec":"%m.SliderLayout addView %m.TextSliderView"},{"code":"\t\t%1$s.setPresetTransformer(SliderLayout.Transformer.Accordion);\n\t\t%1$s.setPresetIndicator(SliderLayout.PresetIndicators.Center_Top);\n\t\t%1$s.setCustomAnimation(new com.glide.slider.library.animations.DescriptionAnimation());\n\t\t%1$s.setDuration(%2$s);        \n\t\t%1$s.stopCyclingWhenTouch(%3$s);","name":"SliderConfigExtra","palette":"56","type":" ","spec":"%m.SliderLayout setDuration %d stopCyclingWhenTouch %b"},{"code":"\t\tfor (int position \u003d 0; position \u003c %1$s.size(); position++) {\n\t\t\t%2$s\n\t\t}","name":"CreateListDataSlider","palette":"56","type":"c","spec":"Slider CreatDataFrom List %m.listStr"},{"code":"position","name":"position","palette":"56","type":"d","spec":"position"},{"code":"slider.getBundle().getString(%1$s) + \"\"","name":"SliderGetString","typeName":"String","palette":"56","type":"v","spec":"Slider getString Key %s"},{"code":"androidx.cardview.widget.CardView %1$s \u003d new androidx.cardview.widget.CardView(this);\nLinearLayout.LayoutParams lp \u003d new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\nint m \u003d (int)0;\nlp.setMargins(m,m,m,m);\n%1$s.setLayoutParams(lp);\n%1$s.setRadius((float)%4$s);\n%1$s.setCardBackgroundColor(%3$s);\n%1$s.setPreventCornerOverlap(true);\nif(%2$s.getParent() instanceof LinearLayout){\nViewGroup vg \u003d ((ViewGroup)%2$s.getParent());\nvg.removeView(%2$s);\nvg.addView(%1$s);\n%1$s.addView(%2$s);\n}","color":"#435B89","name":"RoundGlide","typeName":"","palette":"56","type":" ","spec":"RoundSlide %s.inputOnly to %m.view color %m.color radius %d  "},{"code":"AVLoadingIndicatorView %1$s \u003d findViewById(R.id.%2$s);","color":"#52629C","name":"AVIndicator","typeName":"","palette":"57","type":" ","spec":"Create Indicator %s.inputOnly with id %m.view"},{"code":"%1$s.setIndicator(\"%2$s\");","color":"#52629C","name":"IndicatorType","typeName":"","palette":"57","type":" ","spec":"%s.inputOnly SetIndicator Type %s"},{"code":"%1$s.setIndicatorColor(%2$s);","color":"#52629C","name":"IndiColor","typeName":"","palette":"57","type":" ","spec":"%s.inputOnly setColor %m.color"},{"code":"PacmanIndicator","color":"#52629C","name":"Pacman","typeName":"","palette":"57","type":"s","spec":"Pac-Man"},{"code":"BallSpinFadeLoaderIndicator","color":"#52629C","name":"BallSpin","typeName":"","palette":"57","type":"s","spec":"Ball Spin"},{"code":"LineSpinFadeLoaderIndicator","color":"#52629C","name":"Line Spin","typeName":"","palette":"57","type":"s","spec":"Line Spin"},{"code":"LineScalePulseOutIndicator","color":"#52629C","name":"Line Scale","typeName":"","palette":"57","type":"s","spec":"Line Scale"},{"code":"LineScalePulseOutRapidIndicator","color":"#52629C","name":"Line Rapid","typeName":"","palette":"57","type":"s","spec":"Line Rapid"},{"code":"LineScalePulseOutIndicator","color":"#52629C","name":"Line Scale2","typeName":"","palette":"57","type":"s","spec":"LineScale 2"},{"code":"LineScalePartyIndicator","color":"#52629C","name":"Line Party","typeName":"","palette":"57","type":"s","spec":"Line Party"},{"code":"BallClipRotateMultipleIndicator","color":"#52629C","name":"Clip Ball","typeName":"","palette":"57","type":"s","spec":"Clip Ball"},{"code":"%1$s.smoothToShow();","color":"#52629C","name":"AVShow","typeName":"","palette":"57","type":" ","spec":"Show AVLoader %s.inputOnly"},{"code":"AVLoadingIndicatorView %1$s \u003d findViewById(R.id.%2$s);\n%1$s.smoothToHide();","color":"#52629C","name":"AVHide","typeName":"","palette":"57","type":" ","spec":"Hide AVLoader %s.inputOnly to %m.view"},{"code":"try {\n\r%s\n} catch(net.lingala.zip4j.exception.ZipException e) {\n\r%s\n}","color":"#766633","name":"trymolang","typeName":"","palette":"58","type":"e","spec":"Try Zip4J"},{"code":"net.lingala.zip4j.core.ZipFile zipFile \u003d new net.lingala.zip4j.core.ZipFile(%1$s);","color":"#766633","name":"newZip","typeName":"","palette":"58","type":" ","spec":"Zip InPut Directory %s"},{"code":"zipFile.extractAll(%1$s);","color":"#766633","name":"newZipp","typeName":"","palette":"58","type":" ","spec":"Zip OutPut Directory %s"},{"code":"zipFile.isEncrypted()","color":"#766633","name":"isEncrypted","typeName":"","palette":"58","type":"b","spec":"is Encrypted"},{"code":"zipFile.setPassword(%1$s);","color":"#766633","name":"zipPass","typeName":"","palette":"58","type":" ","spec":"setPass %s"},{"code":"e","color":"#766633","name":"ZipException","typeName":"","palette":"58","type":"s","spec":"Zip Exception"},{"code":"TextUtils.isEmpty(%1$s.getText().toString())","color":"#766633","name":"ifempty","typeName":"","palette":"58","type":"b","spec":"%m.edittext isEmpty"},{"code":"java.io.File compress \u003d new java.io.File(%s);","color":"#766633","name":"oile","typeName":"","palette":"58","type":" ","spec":"File %s"},{"code":"if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.LOLLIPOP) { \nWindow w \u003d this.getWindow();\nw.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);}\n if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.LOLLIPOP) { getWindow().setStatusBarColor(%1$s); }\nif (android.os.Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.LOLLIPOP) { getWindow().setNavigationBarColor(%1$s); }","color":"#3F87FF","name":"StatNavi","typeName":"","palette":"21","type":" ","spec":"Transparent Statusbar \u0026 Colored Navigation %m.color"},{"code":"}\npublic static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {\nBitmap output \u003d Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_8888);\nCanvas canvas \u003d new Canvas(output);\nfinal int color \u003d 0xff424242;\nfinal Paint paint \u003d new Paint();\nfinal Rect rect \u003d new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());\nfinal RectF rectF \u003d new RectF(rect);\nfinal float roundPx \u003d pixels;\npaint.setAntiAlias(true);\ncanvas.drawARGB(0, 0, 0, 0);\npaint.setColor(color);\ncanvas.drawRoundRect(rectF, roundPx, roundPx, paint); \npaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN)); \ncanvas.drawBitmap(bitmap, rect, rect, paint);\nreturn output;","color":"#3F87FF","name":"glidddd","typeName":"","palette":"21","type":" ","spec":"Glideextend"},{"code":"Glide.with(getApplicationContext())\n.load(%4$s)\n.placeholder(R.drawable.%3$s)\n.transform(new com.bumptech.glide.load.resource.bitmap.RoundedCorners(%2$s))\n.into(%1$s);","color":"#968133","name":"Glide Premium by Cyber","typeName":"","palette":"59","type":" ","spec":"Glide Image \u0026 GIF from URL to %m.imageview radius %d Holder %m.resource URL %s"},{"code":"try {\nandroid.content.pm.PackageInfo pinfo \u003d getPackageManager().getPackageInfo(new %1$s().getClass().getPackage().getName().toString(), android.content.pm.PackageManager.GET_ACTIVITIES);\nyour_version \u003d pinfo.versionName; }\ncatch (Exception e){ showMessage(e.toString()); }","color":"#108920","name":"CheckPack","typeName":"","palette":"60","type":" ","spec":"Check Package Name %m.activity "},{"code":"latest_version","color":"#108920","name":"latest_ver","typeName":"","palette":"60","type":"s","spec":"Latest Version"},{"code":"your_version","color":"#108920","name":"your_ver","typeName":"","palette":"60","type":"s","spec":"Your Version"},{"code":"try {\nString command \u003d \"ping -c 1 mobilelegends.com\";\nconnected \u003d (Runtime.getRuntime().exec(command).waitFor() \u003d\u003d 0);\n} catch (Exception e) { }\n\nboolean connected \u003d true;\n\nif (connected) {\n%1$s\n}else{\n%2$s\n}","color":"#108920","name":"Connection","typeName":"","palette":"60","type":"e","spec":"If connected then"},{"code":"if (Double.parseDouble(%1$s) \u003e Double.parseDouble(%2$s)) {\n%3$s\r\n}else{\n%4$s\n}","color":"#108920","name":"versi","typeName":"","palette":"60","type":"e","spec":"If %s \u003e %s then"},{"code":"if (Double.parseDouble(%1$s) \u003d\u003d Double.parseDouble(%2$s)) {\n%3$s\r\n}","color":"#108920","name":"versit","typeName":"","palette":"60","type":"c","spec":"If %s \u003d %s then"},{"code":"version.child(\"app\").child(\"v\").setValue(%1$s);","color":"#108920","name":"addVer","typeName":"","palette":"60","type":" ","spec":"Detect your version %s"}]